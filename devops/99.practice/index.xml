<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>99 实践 on</title><link>https://guowei1651.github.io/devops/99.practice/</link><description>Recent content in 99 实践 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/devops/99.practice/index.xml" rel="self" type="application/rss+xml"/><item><title>0-理论--SCM代码仓库管理--Git的实际使用</title><link>https://guowei1651.github.io/devops/99.practice/0-%E7%90%86%E8%AE%BA--scm%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86--git%E7%9A%84%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/0-%E7%90%86%E8%AE%BA--scm%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86--git%E7%9A%84%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8/</guid><description>背景 # 在软件过程中 问题 # 为什么git的三大流程（git flow,github flow,gitlab flow）都没有测试分支，没有验证分支？只有开发，预生产，生产？而且顺序都是还是主</description></item><item><title>Jenkins的环境管理讨论</title><link>https://guowei1651.github.io/devops/99.practice/01-jenkins%E7%9A%84%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86%E8%AE%A8%E8%AE%BA/</link><pubDate>Fri, 26 Jul 2019 16:26:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/01-jenkins%E7%9A%84%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86%E8%AE%A8%E8%AE%BA/</guid><description>背景 # 在经过公司内部自研持续交付环境，再到使用很长时间的Jenkins之后。对于持续交付工具的一些特点有一定认识。在为软件开发流程设计持续交</description></item><item><title>SCM代码仓库管理</title><link>https://guowei1651.github.io/devops/99.practice/02-scm%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86/</link><pubDate>Sun, 15 Sep 2019 17:18:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/02-scm%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86/</guid><description>背景 # 人在不同的阶段对于同一件事会有不同的理解。而且每个人都来说个人方向选择、精力与经历都左右着对同一件事情的理解。所以， 三人行，则必有我师</description></item><item><title>关于logstash-output-mongodb的一点质疑</title><link>https://guowei1651.github.io/devops/99.practice/%E5%85%B3%E4%BA%8Elogstash-output-mongodb%E7%9A%84%E4%B8%80%E7%82%B9%E8%B4%A8%E7%96%91/</link><pubDate>Tue, 12 Nov 2019 13:08:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/%E5%85%B3%E4%BA%8Elogstash-output-mongodb%E7%9A%84%E4%B8%80%E7%82%B9%E8%B4%A8%E7%96%91/</guid><description>背景 # 使用的Logstash版本是7.4.2，使用的logstash-output-mongodb版本是3.1.6。基本配置如下： input { beats { port</description></item><item><title>解决Linux系统buff/cache过大的问题</title><link>https://guowei1651.github.io/devops/99.practice/%E8%A7%A3%E5%86%B3linux%E7%B3%BB%E7%BB%9Fbuff-cache%E8%BF%87%E5%A4%A7%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/%E8%A7%A3%E5%86%B3linux%E7%B3%BB%E7%BB%9Fbuff-cache%E8%BF%87%E5%A4%A7%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>解决Linux系统buff/cache过大的问题</description></item><item><title>Gradle使用小结</title><link>https://guowei1651.github.io/devops/99.practice/gradle%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</link><pubDate>Fri, 08 Mar 2019 10:01:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/gradle%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</guid><description>概述 # Gradle是CI过程工具，而不是系统。持续集成过程中的构建、自动化测试、打包、发布都可以使用Gradle来完成。而持续进程过程为我们</description></item><item><title>TCPCopy科普</title><link>https://guowei1651.github.io/devops/99.practice/tcpcopy%E7%A7%91%E6%99%AE/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/devops/99.practice/tcpcopy%E7%A7%91%E6%99%AE/</guid><description>元问题 # 问题的根本是什么？ 为什么网上所有的TCPCopy介绍文档都这么难以理解？ 为什么需要全链路压测？ 全链路压测应该怎么做？ 解决问题的办法 #</description></item></channel></rss>