<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>99 例子 on</title><link>https://guowei1651.github.io/iot/99.example/</link><description>Recent content in 99 例子 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/iot/99.example/index.xml" rel="self" type="application/rss+xml"/><item><title>01 用HackRF做一个私网LTE基站</title><link>https://guowei1651.github.io/iot/99.example/01-%E7%94%A8hackrf%E5%81%9A%E4%B8%80%E4%B8%AA%E7%A7%81%E7%BD%91lte%E5%9F%BA%E7%AB%99/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/01-%E7%94%A8hackrf%E5%81%9A%E4%B8%80%E4%B8%AA%E7%A7%81%E7%BD%91lte%E5%9F%BA%E7%AB%99/</guid><description>警告 # 本文中涉及到国家通信安全。请不要随便尝试。如若尝试后造成任何后果与本文作者无任何关系。
整体介绍 # 下面是从HackRF One官网上抄录的一段：
来自Great Scott Gadgets的Hackrf One是一款软件定义的无线电（SDR）外围设备，能够传输或接收1MHz到6GHz的无线电信号。Hackrf One旨在测试和开发现代和下一代无线电技术，是一个开源硬件平台，可作为USB外设使用或编程用于独立操作。 HackrfOne有一个注塑塑料外壳，附带一根微型USB电缆。不包括天线。建议将ANT500作为Hackrf One的启动天线。Hackrf One是射频系统的测试设备。它还没有被测试是否符合无线电信号传输的规定。您有责任合法使用您的hackrf。
HackRF和树莓派一样是一款全开源的硬件项目。不过HackRF的主要是为了提供廉价的SDR方案，作者Mike Ossmann，这个开源项目的代码和文档都在github上。HackRF跟其他的SDR方案相比是一款覆盖频率最宽，而且价格最低廉的SDR板卡。并且它几乎所有的信息都是开源的，Github仓库中还包括KiCad文件。缺点是它没有FPGA，使用的低速的USB2接口，ADC/DAC的精度比较低。总的来说，HackRF非常适合那些对开放性要求很高的黑客，和那些那些对价格敏感的用户。
Taylor Killian在13年8月发表了一篇关于SDR硬件对比的博文，翻译版： 三款SDR平台对比：HackRF，bladeRF和USRP这篇文章对比了当时的三种SDR方案，并且对HackRF的评价也不低。再根据另外一遍2019年10个流行的软件定义无线电（SDR）
下面是HackRF参数：
LPC4320/4330： ARM Cortex M4处理器, 主频204MHz XC2C64A：Xilinx，CoolRunner-II系列CPLD，1500门 MAX2837：2.3GHz到2.7GHz无线宽带射频收发器 RFFC5072：混频器提供80MHz到4200MHz的本振 MAX5864：ADC/DAC, 8-bit，22MHz采样率 Si5351C：I2C可编程任意CMOS时钟生成器，有800MHz分频提供40MHz 50MHz级采样时钟 MGA-81563：0.1–6GHz 3V, 14 dBm 放大器 SKY13317：20 MHz-6.0 GHz 射频单刀三掷(SP3T)开关 SKY13350：0.01-6.0 GHz 射频单刀双掷(SPDT)开关
查找频段 # 因为使用工程机成本较高，并且不单独出售。所以，就找个手机作为私网的终端使用。这个手机的频段如下：
FDD LTE: B1,2,3,4,5,7,8,12,13,17,18,19,20,25,26,28,29,32,66 TDD-LTE: B34,38,39,40,41 TDS: B34,39 UMTS: B1,2,4,5,8,9,19 CDMA: BC0,BC1 GSM: B2,3,5,8
3GPPP规定的LTE协议的频段划分： 由于LTE频谱各国不一致，导致3GPP组织在定义LTE频谱时无法如同GSM一样较为规整，所以只能定义LTE支持的频段列表供运营商、通信设备制造商等参照。所以，每个国家都会根据各自国家的情况选用频段。而国内三大运营商所使用频段： 所以，可以选择不被国内运营商使用的频段进行通信使用。例如说：Band22，Band42，Band43。然后就对不上上面的手机频段了。那就只能用HackRF把LTE频段扫描出来，找一个离他们很远的频点进行配置。并且把发射功率调到最低。
准备 # 选定好不干扰正常通信的频段后，下一步就是要开始准备各项物料。并开始测试系统是否能正常运行。下面是要准备的内容：
空白/虚拟SIM卡 淘宝有卖，可以买几张。 SIM卡开卡器 淘宝上有卖，可以买一个。 测试手机 支持多频段的手机，或者lte网卡。 调试机 连接HackRF的机器，编译环境运行的机器。 编译环境 交叉编译工具链。 测试软件 联通测试软件 频段检测软件 lte代码 HackRF 调试连接线 ANT500天线 HackRF GPS时钟源/GPS蘑菇头 - 电源 调试HackRF One # 这里要做的就是让手机可以在私网LTE基站下拨通电话，所以，不考虑太多其他的内容。例如：核心网，计费等。</description></item><item><title>02 树莓派 01 初始树莓派</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE01-%E5%88%9D%E5%A7%8B%E6%A0%91%E8%8E%93%E6%B4%BE/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE01-%E5%88%9D%E5%A7%8B%E6%A0%91%E8%8E%93%E6%B4%BE/</guid><description>前一段时间出于好奇，心血来潮买了一个树莓派3b。不在意淫了，直接开始上手研究传说中的树莓派到底能做什么。 下面先说说，我的环境准备过程。只能说是经过一番波折之后才最终凑到一个比较全的环境。下图是购买树莓派嵌入式板子的时候的淘宝截图：
这个套餐里面带一款板子，一个电源，一个树莓派官方壳，三块散热片，一个16G的TF卡。
寄回来之后，非常兴奋的拆箱。准备开整的时候却发现，没有TF卡读卡器？没办法往TF卡上烧系统。在网上搜索使用U盘启动的方案，但是发现这些方案都不能再没有BOOT的时候做。所以，只能收起来，让老婆帮我到赛格里面买个TF读卡器。
第二天买到TF读卡器之后，紧接着准备开工。发现网上很多方法都是教大家使用Win32DiskImager，从Win上直接将树莓派的镜像文件写入到TF卡中。但是，我自己的PC机比较老（还跑着WinXP呢）。所以，根本不可行，只能官方的方式进行。官方推荐使用树莓派的HDMI口，将树莓派链接到显示器上。额，突然发现我没有买显示器，没有买HDMI线。只能想其他办法了。
不过在我在很早之前就做了准备。在办宽带的时候就要求电信给一个带HDMI的机顶盒，不用传统机顶盒。现在想想还真是前瞻性。就直接用电视+机顶盒的HDMI线先做树莓派系统安装。安装过程基本上按照提示进行操作就OK。
在安装树莓派OS的时候让我惊讶的是树莓派竟然能检测出来我电视的分辨率，而且还能正常的显示出来。
安装完成之后又发现没有USB键盘，只能从电脑上拆下来USB鼠标先用用。所以，基本上就只是简单的用了一下界面的树莓派系统。
后来又买了，树莓派键盘， 买了HDMI线： 买了USB声卡： 买了很多设备，再加上自己手里的东西。才组成了我自己的树莓派开发环境。
树莓派的优点在哪里呢？ 跟各种类型的云对比，比百度云盘不会限制你的上传下载速度，可以完美的做家用NAS系统。跟共有云（如：亚马逊云，Google云，微软云）对比，不会每月每年跟你收服务器租用费，并且树莓派三代的CPU，GPU都还是很强大的，比这些云上最低配置的服务器要好，也不会限制对服务的使用。
最后附上一张现在我树莓派的一张图，下一次说明后面我对树莓派做了什么。</description></item><item><title>02 树莓派 02 家庭NAS(1)</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE02-%E5%AE%B6%E5%BA%ADnas1/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE02-%E5%AE%B6%E5%BA%ADnas1/</guid><description>需求 # 本人是一个软件行业从业者，在平常会关注各式各样的电子设备、也会了解各种各样的技术。经过多年的学习和实践后发现自己有各种各样的资料需要保存。还有自己在学习过程中总结出的各式的内容。所以，就一直在研究怎么把这些东西存储起来。
最开始我非常讨厌有自己的电脑，因为很多时候网络的诱惑会非常的大。我没有那么强大的能力去抵制这些诱惑，所以一直就不准备给自己购买电脑，电视，游戏机等等电子设备。但会持续的关注。（现在使用的电脑，还是我老婆的电脑(^-^)!）
没有电脑，就意味着没有地方去存储资料。最开始的时候，大概是2012年左右从零担上买了一块300G的硬盘。那时候硬盘还很贵，这块硬盘应该是500块大洋。一直就存着各种各样的文件。后来用百度云（最早的时候百度云盘叫百度云，后来百度为了开展自己的云产品才改了名），那时候用了很多方法去免费的增大自己的百度云盘。但后来，百度云盘开始对版权，敏感信息进行过滤。很多东西都没有办法存储到百度云盘上。并且国内的环境越来越差，国外的Dropbox、Google Drive、Microsoft OneDrive……国内的360云盘（已挂）、华为网盘（已挂）、UC网盘（已挂）、金山快盘（已挂）、新浪微盘（已挂）、迅雷快盘（已挂）。所以说不定哪天百度云盘也挂了。所以一直在探索个人/家庭存储解决方案。
后来慢慢的了解到有很多的厂商已经想到并已经解决了个人/家庭存储的问题，甚至还能解决部分家庭计算的需求。所以，了解了一些这方面的商业化厂商或产品。
群晖、威联通、铁威马。家用NAS设备的三大厂商。小米路由器 HD，华为荣耀立方，华三魔术家等带硬盘的路由器。这些厂商和设备都能帮我们解决存储的问题，并且还有其他的功能加入。为我们的*&amp;ldquo;家庭计算中心&amp;rdquo;*，提供了可能。为之后智能家庭提供了最基础的硬件支持。
功能分析 # 上面提到了很多厂商和设备。如果机遇这些设备提供的功能的去评估设备的价值/价格是非常合适的。如果有经济能力、或者没有很多的闲暇时间，购买这样的设备觉得是物超所值的。
但是，本人是一个喜欢折腾的人。并且从前一篇文章可以知道我为了&amp;quot;折腾&amp;quot;买了树莓派。所以，就想怎样基于树莓派搭建《家用NAS》或者《个人网盘》。下面大概的分析一下《家用NAS》平台所需要的功能：
编号 功能 描述 备注 1 家庭部署 1.设备管理权，数据归属权全部都由个人负责。
2.设备所处的网络也需要控制。
3.数据安全有控制方法。 2 文件共享 1.需要在家庭内各种设备上都能访问文件。
2.可以控制访问权限。不同的成员访问不同的目录。 3 存储能力 1.有存储能力，并可以进行存储的扩展。
2.可以支持数据的备份与故障恢复。 4 远程同步 1.可以在外面的时候（公司、旅游等），将数据同步到家用NAS上。
2.可以在外面的时候访问家用NAS上的数据。 5 远程管理 1.支持远程管理，可以在外面的时候对查看家用NAS的状态。
2.可以支持扩展接入其他家用设备，并控制。 6 离线下载 1.可以在家用NAS设备上进行离线下载操作。
2.查看离线下载进度，控制下载到目录等。 7 各种终端 1.需要支持PC端管理功能。
2.需要支持手机端管理功能。 8 影音中心 1.可以进行DLNA，WebDav等协议 9 很多应用 可以支持很多应用，如：百度网盘同步，家用监控存储，远程家用设备控制，IFTTT等 因为是家用设备，所以这里考虑安全，可用性方面的内容少一些。家用NAS基本上可以上传下载，可以看视频基本上就够用了。所以其他方面的内容不再这里考虑。所以这个方案不适用与公司内部文件共享，网站文件存储等方面。
开源软件研究 # 有了上面的需求，就有了目标。开始研究开源软件，使用开源软件把整体的环境搭建起来。因为是基于树莓派的家用NAS解决方案，所以，都会基于树莓派上的一些解决方案进行。
树莓派上又多种方式开源项目，或者免费项目。可以简单的分为：树莓派操作系统镜像，应用软件，Docker镜像。一项一项的看看这些形式的项目的支持：
树莓派操作系统镜像： # LibreELEC，KODI，OSMC是树莓派官方上能找到的几个影音系统的树莓派镜像。这几个系统都是国外的大神开发的，所以对国内的情况支持较少。例如之前使用LibreELEC想看个Bilibili都没有插件进行扩展，国内的各大视频网站的支持也很弱。操作起来比较像是一个机顶盒，所以必须把设备放在电视附近使用HDMI进行连接。比较限制使用方式，所以在这里不考虑这几个系统。
Raspbian是树莓派基于Debian的一个纯净版本。可以使用操作系统界面，也可以使用命令行方式安装。
CentOS也有专门的树莓派版本，不过支持的比较差。在使用一段时间后莫名其妙的启动不了，不支持ntfs-3g文件系统，安装软件各种不支持树莓派版本。所以，CentOS的树莓派支持还是差一些的。
树莓派应用： # 树莓派上有些应用层的软件，例如：OpenMediaVault，FreeNAS，RaspNAS。这些应用层软件可以使用多种方式安装，有些大神已经把这些系统生成了树莓派镜像，可以直接下载刷到SD卡上就可以用。也可以根据安装步骤进行应用层的安装。
在树莓派上安装这些软件之后，使用时发现一些问题。在使用OpenMediaVault时发现，这个系统支持RAID。厉害了支持RAID方式的磁盘管理，不过要支持RAID就需要多块硬盘。在没有多块硬盘的情况下使用这些软件完成NAS的部署，比较困难。并且，在树莓派上运行这些程序事也会发现一些不稳定的问题，并且对终端支持的种类也有限，要不就是终端软件是收费的了。所以，整体考虑这几个应用系统不可用。不过有一些大神也使用这几个系统去实现NAS，可能大神们对这些系统进行了改造。
Seafile - 开源的企业私有网盘。国产的私有化部署网盘系统，不过对树莓派的支持稍差一些。因为Seafile是使用Python语言开发的，可以使用Sqlite3作为数据库。但是在安装过程中会和其他的软件依赖发成冲突，并且不支持树莓派上使用Docker作为环境隔离。 Pydio | Enterprise File Sharing &amp;amp; Sync Platform。也是一个不错的应用软件，比较遗憾的是不支持树莓派。</description></item><item><title>02 树莓派 03 家庭NAS(2)</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE03-%E5%AE%B6%E5%BA%ADnas2/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE03-%E5%AE%B6%E5%BA%ADnas2/</guid><description>内网穿透选型 # 上一篇文章中介绍了，家用NAS树莓派的整体方案。在整体解决方案中说明的搭建整体方案的第一步是解决访问问题。本文将主要介绍访问解决方法。
内部网络穿透技术可以分为NAT、DDNS、反向代理和VPN。这里就不介绍这些方式，可以查看参考中的内容进行了解。这里说明他们的大概工作原理用于选型工作。
NAT技术： # 内网中的机器怎样访问公网上的网站？内网机器发送的数据可以经过Router转发的公网上，那公网上返回的数据怎么到达内网的机器内，这个过程就是NAT技术。主要技术是通过动态端口映射技术完成。 DDNS技术： # DDNS即动态域名解析，是将用户的动态IP地址映射到一个固定的域名解析服务上，用户每次连接网络的时候，客户端程序就会通过信息传递把该主机的动态IP地址传送给位于服务商主机上的服务器程序，服务程序负责提供DNS服务并实现动态域名解析。就是说DDNS捕获用户每次变化的IP地址，然后将其与域名相对应，这样域名就可以始终解析到非固定IP的服务器上，互联网用户通过本地的域名服务器获得网站域名的IP地址，从而可以访问网站的服务。 反向代理： # 反向代理就是经常说的，有一台公网服务器和私网服务器在一个网络内。公网服务器上构建一个服务，把用户请求转发到死亡服务器上就可以了。 VPN技术： # VPN技术就是将两个私网通过隧道技术组合成一个子网。 方案选择 # 本次我们的方向是家用NAS，所以，网络环境也是家庭环境。所以，可能需要组合各种内网穿越技术才可以满足整体要求。所以，现在开始组织方案。
在本方案中家用网络使用的是电信网，电信网是有公网IP的。在没有公网IP的通信服务商，请自行选择其他方案。然后，再使用NAT技术的端口静态映射，将树莓派上的服务发布出去。使用DDNS技术的域名动态解析将路由器域名发布到域名上。
实现 # 先把树莓派的内网IP设置为静态IP。 实现上图中的第七步，在路由器上设置端口映射。因为自家使用的路由器不一样，我就不截图了。几乎所有的家用路由器都是支持端口映射的。 在树莓派上编写代码，实现上图中1,2,3步。我使用的是NETGEAR R6200V2，所以根据路由器的特点进行了公网IP的获取工作。 配置定时执行过程。 定时执行（cron）代码：
*/2 * * * * root /home/pi/update_public_ip.py &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp; 更新域名IP代码（python）：
#!/usr/bin/python2.7 #-*-coding:utf-8-*- import os import sys import httplib import urllib2 import urllib import base64 import cookielib # 获取网管地址，即路由器地址 def getGateway(): return &amp;quot;172.25.1.1&amp;quot; # 获取路由器上的公网IP。因为实在路由器上拨号上网的，所以从路由器上获取公网IP def getPublicIP(ip, user, password): base64string = base64.</description></item><item><title>02 树莓派 04 家庭NAS(3)</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE04-%E5%AE%B6%E5%BA%ADnas3/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE04-%E5%AE%B6%E5%BA%ADnas3/</guid><description>树莓派端服务安装过程可以分为几个步骤：
安装树莓派操作系统。在网上可以找到各种类型的这里不再赘述。 挂载硬盘。 安装Docker。 启动Docker镜像。 下面按步骤说明。
挂载硬盘 # 安装ntfs-3g # $ sudo apt-get install ntfs-3g 挂载硬盘 # 获取硬盘描述符： $ sudo fdisk -l Disk /dev/sdb: 1.8 TiB, 2000365289472 bytes, 3906963456 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x7a911a43 Device Boot Start End Sectors Size Id Type /dev/sdb1 63 1048578614 1048578552 500G 7 HPFS/NTFS/exFAT /dev/sdb2 1048578615 2097157229 1048578615 500G 7 HPFS/NTFS/exFAT dev/sdb3 2097157230 3906959804 1809802575 863G 7 HPFS/NTFS/exFAT 获取硬盘的blkid： $ sudo blkid /dev/sdb1 /dev/sdb1: LABEL=&amp;quot;M-fM-^VM-0M-eM-^JM- M-eM-^MM-7&amp;quot; UUID=&amp;quot;565CF4865CF461E3&amp;quot; TYPE=&amp;quot;ntfs&amp;quot; PARTUUID=&amp;quot;7a911a43-01&amp;quot; 修改配置文件/etc/fstab: $ sudo cat /etc/fstab cat /etc/fstab proc /proc proc defaults 0 0 PARTUUID=c0edcca8-01 /boot vfat defaults 0 2 PARTUUID=c0edcca8-02 / ext4 defaults,noatime 0 1 # a swapfile is not a swap partition, no line here # use dphys-swapfile swap[on|off] for that PARTUUID=7a911a43-01 /mnt/share/1 ntfs-3g defaults,noatime 0 1 PARTUUID=7a911a43-02 /mnt/share/2 ntfs-3g defaults,noatime 0 1 PARTUUID=7a911a43-03 /mnt/share/3 ntfs-3g defaults,noatime 0 1 重启树莓派： # sudo restart 安装Docker # 安装Docker软件 # $ sudo curl -sSL https://get.</description></item><item><title>树莓派-Home-Assistant-概述</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE07-home-assistant-%E6%A6%82%E8%BF%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE07-home-assistant-%E6%A6%82%E8%BF%B0/</guid><description>Home Assistant #</description></item><item><title>树莓派-内网穿透</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE05-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE05-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid><description>AllProxy – 零基础、免费「内网穿透」工具 一分钟实现内网穿透（ngrok服务器搭建） https://github.com/fatedier/frp 可以实现内网穿透的几款工具 内网反向代理的一些整理（深入理解反向代理）</description></item><item><title>树莓派-无线显示器</title><link>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE06-%E6%97%A0%E7%BA%BF%E6%98%BE%E7%A4%BA%E5%99%A8/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/iot/99.example/02-%E6%A0%91%E8%8E%93%E6%B4%BE06-%E6%97%A0%E7%BA%BF%E6%98%BE%E7%A4%BA%E5%99%A8/</guid><description>五年后，Chromecast仍然拥有自己的产品 无线显示技术：WiDi,WLAN Display,Air Play,Miracast的摘抄 8种无线HDMI同屏器盘点 完美实现苹果小米华为手机平板投屏电视投影机 使用 Miracast 投影到无线显示器 修复无线显示器或扩展坞连接问题</description></item></channel></rss>