<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>08.架构师技术 on</title><link>https://guowei1651.github.io/architecture/08.architect-technology/</link><description>Recent content in 08.架构师技术 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/architecture/08.architect-technology/index.xml" rel="self" type="application/rss+xml"/><item><title>00 概述</title><link>https://guowei1651.github.io/architecture/08.architect-technology/00-%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/00-%E4%BB%8B%E7%BB%8D/</guid><description/></item><item><title>01 怎么画架构图</title><link>https://guowei1651.github.io/architecture/08.architect-technology/01-%E6%80%8E%E4%B9%88%E7%94%BB%E6%9E%B6%E6%9E%84%E5%9B%BE/</link><pubDate>Sun, 10 Apr 2022 21:10:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/01-%E6%80%8E%E4%B9%88%E7%94%BB%E6%9E%B6%E6%9E%84%E5%9B%BE/</guid><description>0. 前言 # 0.1 业界现状 # 在软件业界有一个说法：PPT架构师。PPT架构师的由来肯定是因为架构师有很大一部分工作在做PPT或者在讲PPT。一方面“</description></item><item><title>02 中台</title><link>https://guowei1651.github.io/architecture/08.architect-technology/02-%E4%B8%AD%E5%8F%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/02-%E4%B8%AD%E5%8F%B0/</guid><description>微服务架构何去何从？ DDD：架构思想的旧瓶新酒 一个通用的数据中台架构应该如何构建？ 数据中台应该包含什么？ 滴滴业务中台的实践与思考 eBay 管理庞大服</description></item><item><title>03 遗留系统升级</title><link>https://guowei1651.github.io/architecture/08.architect-technology/03-%E9%81%97%E7%95%99%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/03-%E9%81%97%E7%95%99%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7/</guid><description>参考： # 软件为什么会沦为遗留系统？ 征服遗留系统 最头疼的遗留系统该如何改造？ CCB只管决策，不管分析，那么这个分析工作是谁做的呢？</description></item><item><title>04 怎样将One-ID、One-Model、One-Service推演成为One-Data</title><link>https://guowei1651.github.io/architecture/08.architect-technology/04-%E6%80%8E%E6%A0%B7%E5%B0%86one-idone-modelone-service%E6%8E%A8%E6%BC%94%E6%88%90%E4%B8%BAone-data/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/04-%E6%80%8E%E6%A0%B7%E5%B0%86one-idone-modelone-service%E6%8E%A8%E6%BC%94%E6%88%90%E4%B8%BAone-data/</guid><description>参考： # 数据中台核心方法论&amp;ndash;OneModel为何需要产品化支撑？ 构建数据中台过程中，OneModel即统一数据及管理理论的提出背</description></item><item><title>05 中台设计与实现方法</title><link>https://guowei1651.github.io/architecture/08.architect-technology/05-%E4%B8%AD%E5%8F%B0%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/05-%E4%B8%AD%E5%8F%B0%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</guid><description>描述中台的设计原则与实现细节考量 按场景进行能力实现与输出。 Dubbo文档中有： 粒度 # 服务接口尽可能大粒度，每个服务方法应代表一个功能，而不是</description></item><item><title>06 服务治理</title><link>https://guowei1651.github.io/architecture/08.architect-technology/06-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/</link><pubDate>Tue, 08 Jun 2021 17:00:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/08.architect-technology/06-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/</guid><description>概述 # 随着公司的业务、团队的不断更迭、增长，原有的软件系统已经不能很好的解决现在的问题。这样的一个软件系统已经在各个方面产生了问题，它已经限</description></item></channel></rss>