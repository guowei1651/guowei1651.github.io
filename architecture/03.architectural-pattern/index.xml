<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>03.架构模式 on</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/</link><description>Recent content in 03.架构模式 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/architecture/03.architectural-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>01 概述</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/01-%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/01-%E4%BB%8B%E7%BB%8D/</guid><description>背景： # 1. 学习背景 # 多年前在学习架构设计的过程中，无意间找到了叫做《架构模式》的架构设计方法论。从哪之后就开始逐渐的深入学习这方面的内容。在</description></item><item><title>02 分层架构模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/02-%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/02-%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid><description>介绍 # 分层架构是最常见，也是最容易理解的架构模式。因为在现实生活中会遇到很多类似的例子与模型。例如在在装修的时候或者为一个金属器物刷油漆时最</description></item><item><title>03 事件驱动架构模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/03-%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/03-%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid><description>介绍 # 还是先举例子，在平常的生活中事件驱动架构也是比较常见的。一般情况下的人与人之间的沟通都是以一个人说一个人听的关系进行，并同时可以交换听</description></item><item><title>04 微内核架构模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/04-%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/04-%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid><description>上面提到的核心微服务系统群的概念，可以参加大中台的概念。但是它是更倾向于稳定，通用性的业务。它是经过高度抽象并提供原子操作的核心系统，就像微</description></item><item><title>05 微服务架构模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/05-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/05-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid><description>以内部复杂度替换为外部复杂度。 管理成本极度上升。 微服务划分规则很难把控。</description></item><item><title>06 云架构模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/06-%E4%BA%91%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/06-%E4%BA%91%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid><description/></item><item><title>07 命令查询指责分离模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/07-%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%8C%87%E8%B4%A3%E5%88%86%E7%A6%BB%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/07-%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%8C%87%E8%B4%A3%E5%88%86%E7%A6%BB%E6%A8%A1%E5%BC%8F/</guid><description>介绍 # 命令查询责任分离源于Bertrand Mayer设计的命令查询分离（CQS）原理。CQS声明一个类只能有两种方法：改变状态并返回void</description></item><item><title>08 仓库系统及知识库</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/08-%E4%BB%93%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9F%A5%E8%AF%86%E5%BA%93/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/08-%E4%BB%93%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9F%A5%E8%AF%86%E5%BA%93/</guid><description/></item><item><title>09 控制环路模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/09-%E6%8E%A7%E5%88%B6%E7%8E%AF%E8%B7%AF%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/09-%E6%8E%A7%E5%88%B6%E7%8E%AF%E8%B7%AF%E6%A8%A1%E5%BC%8F/</guid><description/></item><item><title>10 管道过滤器模式</title><link>https://guowei1651.github.io/architecture/03.architectural-pattern/10-%E7%AE%A1%E9%81%93%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A8%A1%E5%BC%8F/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/architecture/03.architectural-pattern/10-%E7%AE%A1%E9%81%93%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid><description/></item></channel></rss>