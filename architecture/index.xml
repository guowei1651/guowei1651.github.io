<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>架构设计 on</title><link>https://guowei1651.github.io/architecture/</link><description>Recent content in 架构设计 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>目录</title><link>https://guowei1651.github.io/architecture/directory/</link><pubDate>Sat, 22 Apr 2023 13:02:19 +0800</pubDate><guid>https://guowei1651.github.io/architecture/directory/</guid><description>背景 # 一直想梳理关于架构的整体知识体系以及相互间的作用与影响关系，并形成自己的架构理念。为在之后的工作中从更高层次的理解架构这个东西而整理。
在这里一方面是为了更好的梳理与整理自己的架构思维，这里是按照作者现阶段对于架构的理解进行整理的。
本系列的流程是到底什么是架构？然后引入架构怎么设计？架构设计中包括哪些要素？顺着下去就是到底使用哪些工具，需要展示出来哪些内容才可以设计出一个比较好的架构？然后我们所有的东西都应该是需要有质量的，那架构设计的质量应该怎样考量？架构质量通过后，落地措施应该怎样落地？落地之后怎样进行演变？架构老化之后怎样进行遗留系统的改造？
基于此时此刻对于架构设计的认知。而根据邓宁-克鲁格效应，对一件事的认知会不断的变化。所以，这个目录会不断的变化。 目录 # 00.架构师知识体系 # 本章的主要目的是解释架构是什么？为什么要做架构设计？以什么能力去进行架构设计？
01.什么是软件架构？ 02.终极问题&amp;ndash;为什么要架构设计？ 03.怎么学习架构设计？ 04.怎么做架构设计 05.架构设计理念 06.架构师知识体系 07.架构师关注那些东西 [08.终极问题&amp;ndash;企业业务架构设计] 09.为什么你是架构师？ 10.架构设计方法 # 介绍架构设计的方法论，所有的事情都需要有方法才能真正的落地实施下去。
[01.介绍] [02.4+1视图法] [03.ABSD] [04.ODP] [05.ADMEMS] [06.DSSA] 20.分析与设计 # 分析与设计架构是的标准流程。
[01.介绍] [02.DDD] [03.MDD] [04.ADD] [05.风险驱动] [06.演进驱动] [07.ABSD] [08.面向构件的软件设计] 30.架构模式 # 架构设计必要要素，在架构设计过程中可以借鉴的模式。
01.介绍 02.分层架构模式 03.事件驱动架构模式 [04.微内核架构模式] [05.微服务架构模式] [06.云架构模式] 07.命令查询指责分离模式 [08.仓库系统及知识库] [09.控制环路模式] [10.管道过滤器模式] [11.P2P模式] 12.实践-为什么Kubernetes的架构是好架构？ [13.总结] 35.架构评估 # 架构设计完成后的评估方法。
[01.介绍] [02.ATAM/CBAM] [03.SAAM] [04.COBIT] 40.设计原则 # 一些基本性的原则。
01.介绍 02.KISS [03.知识最少原则] [04.无状态服务] 41.</description></item></channel></rss>