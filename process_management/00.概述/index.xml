<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>00 概述 on</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/</link><description>Recent content in 00 概述 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>关于职场中的可替代性问题</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E5%85%B3%E4%BA%8E%E8%81%8C%E5%9C%BA%E4%B8%AD%E7%9A%84%E5%8F%AF%E6%9B%BF%E4%BB%A3%E6%80%A7%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E5%85%B3%E4%BA%8E%E8%81%8C%E5%9C%BA%E4%B8%AD%E7%9A%84%E5%8F%AF%E6%9B%BF%E4%BB%A3%E6%80%A7%E9%97%AE%E9%A2%98/</guid><description>公司级的软件过程实践系列文章，请参见连接。
背景 # 对于初入职场的人来说最主要的是学习。学习职场中各种各样的规则、方法、能力，为自己真正的走入职场做好准备。职场是一个残酷的地方，比如说传说中的华为35岁辞退，再比如说马云的996是福，再比如乔布斯被踢出苹果。这些事情都说明公司要做的一件最重要的事情就是员工同质化，提高员工的可替代性。
企业这样做有着自己的目标，因为这样会最大限度的降低企业的成本。为企业保持新鲜血液的持续流动提供着有力的支撑。并且为企业的稳定发展提供了人员基础平台，保证在任意位置的人员的可替代性可以保证企业在失去任何一个人时都可以正常运行。
如果公司没有意识到这一点，那说明这个公司还处于最初期的个人英雄主义阶段。这个阶段也是职场人需要适应的，不过这个阶段的公司发展可能会受到公司决策者认知层面的问题。
考虑职业生涯中不可替代性的原因有多个方面，在这里为职场人说明为什么需要考虑职业生涯，为大家在职业生涯中指明方向：
#原因
**为什么要思考不可替代性？**对于个人来说考虑不可替代性的原因包括内部原因和外部原因。内部原因是说明每一个职场人，作为一个成年人都需要不断的思考，不断的提升自我，不断的跳出舒适区才能真正的发展。外部原因是想说明，职场是瞬息万变的，需要不断的提升自己才可以不断的站在更高的位置上。
内部原因 # 每个人都想做有创造性的工作 每个人都不想干重复性的工作，每个人都想干需要创造性的工作。那那些重复性的工作应该给谁做？
每个人都想做体现个人价值的工作 你想不想实现个人价值，想不想做能够体现自己价值的工作？这个问题的答案非常明显。深挖人们为什么想做能够体现个人价值的工作，从马斯洛人类需求理论可以看到人们最高级的需求是自我实现。所以，人们是有实现自我的需求的。
每个人都不应该停止思考 对于很多放弃思考的人说，你们要思考、要知道自己的价值。就像你永远叫不醒一个装睡的人一样，永远跟他们说不通。不过作为一个人来说思考是你的基本权利，也是你的基本义务。所以请真正的想自己想要什么。
每个人都需要有自己的目标 为自己订立目标，有目标就不会有倦怠感。职业人从学校毕业后从一种被动的知识接受者，变成一个在知识海洋中自己探索的人来说。要适应这个过程是非常难得一个过程。不过一定要为自己订立目标，不管是长期的还是短期的都要有目标感。 我很早之前在QQ的上的一句话是：人生规划，规划人生。自己为自己多想一点才能真正的把握自己的人生，才能过好自己的生活。
职业规划 职业规划对于每个人来说都是问题，所以需要深入思考。可以参考：案例分析 | 如何转动生涯三叶草模型 外部原因 # 长江后浪推前浪，一代新人胜旧人 新人对于公司来说永远是便宜的，并且能干活的。那为什么要留着不干活而且费用超级贵的这群人呢？所以就带来了，如果你是可替代的公司不开你开谁？这就是我们为公司付出很多的人的下场。
在职场竞争中脱颖而出 在职业生涯中表现出进取心和上进心是必须的，因为职场中不喜欢那些只想干好、只能干好自己的事的人员。
对于每一个职场人来说，这些问题都是难以避免的。不管是自己创业、还是作为公司职员都是必须的。对于创业者表现的更加专业，你的职员才能对公司更加有信心。才能相信你画的饼。
专业的方式对待专业的团队，才能形成专业的结果。如果一个公司、企业、团队需要稳定的、可靠的输出就必须有能力建立专业的结果。所以，不管是从公司角度，还是从个人角度都会推进专业化的进程。推进你意识到不可替代性问题，所以接下来我们说说怎么进行不可替代性方面的能力建设。
方案 # 上面从各个方面说明了你应该担心可替代性问题，那么怎么应对这个可替代性问题。对于我们的能力建设来说我可以从几个方面说明：通用能力建设，技术能力建设。通用能力也成为了软实力，技术能力说明你的能力深度与广度的问题。这里会从容易替代到不容易替代的顺序逐一的说明这些不可替代性能力。
通用能力 # 在这之后作为职场人就来说就要订立自己的职场目标。成为一个职业人的过程中通用能力在技术能力之后，但是通用能力决定职业的高度。而技术能力决定职业的基础。所以，通用能力体现了职业人的职业化水平。
业务知识的不可替代性 从工作开始就发现一种不可替代性是一种比较低级的，被替代风险很高的一种。这种就是“业务能力不可替代性”，这种替代性很可能被各种各样的新人所替代，每个人都是有学习能力的，每个人都在不断的学习业务知识。并且从公司的角度看懂的业务的人越多对于公司
职业化 工作和生活要分开，不要在工作中暴露自己的喜好，不要在工作中暴露自己的情绪。以稳定的工作作风，保证工作质量与输出速度。因为暴露自己的喜好、情绪、工作与生活纠缠不清会造成过多的麻烦，并且对于稳定工作的稳定输出能力也是挑战。所以，以职业化的方式对待工作是一个职场人所必须经历的一个痛苦过程。
全局思维的不可替代性 从入行到现在一直在思考，自己怎么才能成为一个不可替代的人。而比较容易的就是保持一颗全局思维能力的心。在精益生产中，这是一个先决掉件。也是进入管理层的最基本能力。
差异化竞争 不能只关注行业内部技术方面的知识，还需要其他通用能力的建立。比如说沟通能力，谈判能力，组织与协调能力等。有了与其他人差异化的能力，可以大幅提升他人对于个人的评价。
逻辑思维能力 建立逻辑思维能力，有助于在遇到未知事情时对于问题分析与推演能力的建立。这样可以保持一颗理性的心脏，不会因为一些事情感觉到束手无策。在别人束手无策的时候你可以进行分析与决策，这就是最大的竞争力。
完善的认知体系 认知代表着对于个人来说就是对于各类事情解决方案的提出能力的体现。不过这样的认知能力对于绝大多数人来说很难。所以这个内容才是最重要的通用能力。
技术能力 # 虽然每个行业内的技术都不相同，但是每个行业对于技术的心来说都是一样的。都需要对技术的深度与广度进行不断的探索与发现。并且从技术角度说有了深度与广度之后就需要更多的进行自我体会，形成自己的技术认知体系。每个技术牛人都需要一套自己的技术认知体系，就是自己的技术经验。
不过经验是经验，经验的可复制性是技术牛人需要考虑的内容。技术复制也是技术能力的一种体现。分享是一个人的美德，愿意分享的人可以为技术人建立不错的人脉。
问题解决的不可替代性 对于技术上一个突破口就是别人解决不了的问题，你可以解决。这个时候就可以凸显出你的能力。不过这个能力从某个角度讲，只是下等能力。还是一种你就是一个帮公司干活的人的感觉。
技术不可替代性 某些技术只能你来完成，这就是能力。例如电焊的时候只有你可以焊航空燃料仓接口处的焊接，图像识别是低分辨率高干扰原图识别等等。
建立行业知识体系 建立一个行业内知识体系是进入与学习一个行业知识所必须的步骤。不过真正深入的理解每一项技术就需要先建立知识体系，并在知识体系中知道自己欠缺那些才可以保证一颗谦虚的心。这样才能三人行必有我师。
总结 # 不要认为个人英雄主义就是不可替代性。崇尚个人英雄主义的公司是不可能发展到更高水平的。对于公司来说团队合作才是发展的基础，提倡合作大于竞争的公司才是有公司竞争力的公司。
忠告：不要以为有了不可替代性就可以功高震主。要认识到铁打的营盘流水的兵，在哪里都是符合的。所以，不可替代性在遇到真正的职场危机的时候并不可能保护你。
即使有了不可替代的能力的时候，更要以一颗平常心对事、对人。这样对一个职业人的发展才可以有长期的保证。每时每刻都要保持一颗谦虚谨慎的心，这个是职业化人才的最基本要求。
参考 # 职场中如何提高自己的不可替代性？ 生涯三叶草简说 生涯规划工具——三叶草模型 案例分析 | 如何转动生涯三叶草模型</description></item><item><title>开发软件究竟在做什么？</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6%E7%A9%B6%E7%AB%9F%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6%E7%A9%B6%E7%AB%9F%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88/</guid><description>公司级的软件过程实践系列文章，请参见连接。
概述 # 作为软件行业从业十年的人，在被别人问及你的工作什么的时候。怎么解释你的工作？
一个写代码的？(就是码农) 一个开发软件的？(就是程序猿) 一个做互联网的？(就是在网上买东西的) 一个做IT的？(就是修电脑的) 这些不能很好的解释我们的工作。就像现在有人找你开发软件，你给他解释了一套之后他还是不理解你到底为啥那么贵一样。
我想了很久，这个问题很难一句话解释清楚。不过还是努力的找了一个比较容易被接受的方式。我是做工程的。因为大家听到工程这两个字最起码会想到复杂的，严谨的，可靠的，有技术含量的等等方面的词。
对于业内人士来说每一个软件都有内部的核心概念与领域，在业务领域内的问题就非常复杂，那将领域问题转换为软件那会同等的复杂。所以才有了DDD这样的解决复杂问题的方法论。在解决这些复杂问题的时候，需要以严谨的态度对待每一个细节。并梳理出各个业务领域的模型与关系。梳理出业务领域模型后将模型以可靠的方式转换为软件实现。并在转换过程中以技术实现为核心。
在现在软件工程与技术还没有发展的比较完备与完善的阶段。很多开发者屈服于现实中的制约与约束，进行不完美的项目实施。这是可以理解的。不过我们软件从业者需要有一颗工程的心，以更加完善，更加可靠的方式想社会各界呈现出更加规范的软件工程。
公司级软件过程 # 怎么样才能做出完善的工程？虽然软件工程还完美的方法论，但是无外乎这几个方面：蓝图规划，过程域，技术域，运维域，运营域。蓝图规划主要是为公司制定各方面的规划，这样可以在团队运行过程中更有明确的目标。过程域主要有项目管理完成，这个域中主要可以参考PMP。技术域现在是被提及最少，或被忽略的。技术域主要负责公司的技术的一些管理和规划的工作。在运维域中主要负责线上环境，公司基础设施的运维工作。保证线上系统的稳定可用。运营域主要负责线上、线下的运营活动，并需要根据运营决定下一步的开发工作。
这些域每一个都是一个专业性很强的领域。可以说，每一个领域在大学里都对应着一个或者多个专业。用比喻就可以很清楚的看到每个领域都有庞大的知识体系所存在。
这里的域和项目/产品的关系，域和公司的关系都是很复杂的。在产品的生命周期中每时每刻都有这几个域中的工作内容。公司会在这些域中总结出适应于公司的规范和积累。
每个域与公司之间的关系会在介绍域时说明。
0. 蓝图规划 # 现在流行企业进行数字化、信息化转型的工作。企业在做信息化转型时一般的第一步会找个咨询公司咨询需要做什么。一般情况下咨询公司会根据ToGAF的推荐进行数字化转型的分析与咨询工作。
最终会得出企业的信息化的整体规划，以及规划中各项内容的详细分析结果。至于为什么这么做可以参见ToGAF内容。
我最近在写几个系列的Blog。基本上可以映射到这些域上。但是在蓝图规划这方面还没有一个系列的Blog介绍，所以，敬请期待这个域的系列Blog。
1. 过程域（项目管理） # 这个域是体现软件实施过程的工程属性最明显的一个域。这里要做的就是怎样在现有的资源下按时按点的交付。这个里面包括所有的PMP的工作，并且还需要进行沉淀与积累。
在过程域最直接的公司级积累就是ISO质量认证和CMMI软件成熟度模型。并且过程域还需要管理公司内部的组织结构，与外部的沟通、对接机制。
这里对应的系列Blog就是本文所在的系列：公司级的软件过程实践
简单的可以分为：
组织管理 过程管理 资源管理 等 2. 技术域（技术管理） # 技术域很多人不知为何物。今天看到一篇文章《雷军点将小米技术委员会：事关生死存亡的四件事》很好的回答了这个问题。公司要想长久的毅力不倒，最主要的是创新力。创新力的力量源泉就是技术。
技术域内的内容可以分为：
技术预演 技术选型 技术设计 技术规划 基础设施 等 在技术域为公司工程级的技术实施规范，并可以提供工程级的技术支撑。为公司之后的技术发展制定方向与规划。
这里对应的系列Blog就是本文所在的系列：架构设计，微服务实践，DevOps实践。
3. 运维域（软件运行时管理） # 运维域保证线上系统的正常运行。这里更加关注线上系统的运行环境，包括：软件环境，硬件环境，网络环境，机房环境，产品的物理架构等等。在做架构设计或者运维设计时需要考虑的最多的内容是做可靠性和可伸缩性。满足这两个就可以满足线上大部分情况。
运维域可以分为：
资产管理 稳定性管理 可靠性管理 安全管理 等 这里对应的系列Blog就是本文所在的系列：架构设计，微服务实践，DevOps实践。
4. 运营域（运营管理） # 运营是我最不熟悉的一个领域。按照我的理解运营是负责产品的方向，针对的客户群分析，业务形态规划等等工作的一个中心。产品是否好用，是否能吸引客户的决定在于这里。
运营域分为：
业务范围 目标客户 目标场景 等 我觉得运营域的积累是可以为公司积累出在特定领域中的业务模型，并业务分析模型。
这里不熟悉的内容就不出系列的Blog了。</description></item><item><title>科学素养</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00--%E7%A7%91%E5%AD%A6%E7%B4%A0%E5%85%BB/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00--%E7%A7%91%E5%AD%A6%E7%B4%A0%E5%85%BB/</guid><description>背景 # 虽然国民的教育水平在不断的提升，但对于科学素养的认知。
认为情商解决一切问题是国内很大的弊病。在国外风气是因为大部分欧美国家已经形成了很健全的科学素养的情况下去推广情商解决问题是可行的。但是在国内这个大环境下去推行情商决定一切那就是扯淡。
没有科学的，工程化的方法解决现实问题就不可能提高产品质量，提高产品水平。
科学素养 # 涵盖内容
事实是严谨的。 # 解决问题的通用方法。 # 抽象，分解，知识。
一切皆可被数据。 # 改善是逐渐形成的。 # 研究结论是可以借鉴的。 # 问题都需要落地实施 # 不要像哪些大牛们一样，高谈阔论而不落地实施。很多人的一个问题就是意识在一个层面，落地在另一个层面。不把事情推行到落地方案中，怎么才能把事务推行下去？
总结 #</description></item><item><title>破局</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/%E7%A0%B4%E5%B1%80/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/%E7%A0%B4%E5%B1%80/</guid><description>守破离
立新核破局
破局的目标，破局的方法，破局的过程。</description></item><item><title>软件从业人员职业技能</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00--%E8%BD%AF%E4%BB%B6%E4%BB%8E%E4%B8%9A%E4%BA%BA%E5%91%98%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00--%E8%BD%AF%E4%BB%B6%E4%BB%8E%E4%B8%9A%E4%BA%BA%E5%91%98%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD/</guid><description>企业文化 # 企业文化并不是你说的哪些，而是你践行的哪些。
持续改进 开放心态 诚实守信 价值驱动 软件从业人员职业素养 # 软件职场认知 业务发展流程。驻段发展 闭环思维模式。从业务整体逻辑整理清晰，请可以真正落地。 结构化思维模式。对于工作中代码可以进行 先思考后行动。 完成准则。 个人管理 持续改进（持续学习） 开放心态。 PDCA，SMART，5W2H 职场事项 沟通能力。 规则的力量。 诚实，诚信。 人生 相信人性本恶，但要本着最大的善意去揣测人们的行为。</description></item><item><title>软件为什么复杂？</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%8D%E6%9D%82/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%8D%E6%9D%82/</guid><description>背景 # 使用“忙碌”来掩盖自己的无知，是人对于心底恐惧的的一种应对方式。放下防备，放下防御是对自己最大的成长。 说直白点就是掩饰无能，掩饰认知缺陷，掩饰经验不足。 对于恐惧的应对说明是否形成完善的心理应对方法。形成完善的人格。 换句话说如果不知道自己想要什么，要怎么做？这样的人对于为人的路来说对于他计较艰难。
问题所在 # 为什么我认为软件很复杂？
软件为什么是知识密集型工作？
软件的复杂度到底在哪里？
为什么工程规范无法标准化？
设计 #</description></item><item><title>软件中的快与慢</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%BF%AB%E4%B8%8E%E6%85%A2/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%BF%AB%E4%B8%8E%E6%85%A2/</guid><description>公司级的软件过程实践系列文章，请参见连接。
背景 # 随着互联网行业的快速发展，软件开发也变的为快不破。而对于我们的软件工程规律来看，软件开发从某个角度来说还是一份良心工作。也就是说互联网行业从业人员工作绝大部分内容是实现业务功能。互联网行业随时随刻都在变化，那我们的软件功能也需要能够跟随着业务的不断变化而不断的变化。
思维方法 # 这样就带来了一个问题:
人的步伐是永远跟不上思想的脚步的。
这句话作者是总结了软件行业的现状而说的。对于软件行业来说我们都想做的更快、更高、更强，但是对于现实中的节奏来说不可能是一蹴而就的。事物的发展都是需要有一个过程的，一蹴而就的事情的机率几乎是不可能。从软件行业举例：软件出现的时间并不是很长，不像建筑，冶金，制造行业出现的时间长。在软件行业发展的不长的历史中，不像其他行业那样它到现在为止没有一套通用的软件过程管理方法论。各种个样的技术还在层出不穷，试图在软件行业内解决其他行业无法解决的问题。
认知不足 # 现在整个社会不认同软件是一门工程学科。不应该具备工程所需的严谨性、实事求是的能力，所以造成了很多问题。例如：一个软件开发人员需要搞定EA，ACRH，BA，PM，Code，Test，OPS，QA，SCM等等角色。在这些角色中每个角色都有角色中需要完成的工作，而现在外部人员干的最主要的事情是在想打断软件人员工作的时候打断软件人员工作，最后因为打断工作而造成的问题再由软件人员承担。
软件从业人员参差不齐 # 不相信现有的行业领先最佳事件，习惯于被行业外部人员的节奏所裹挟。现在互联网行业内几乎所有的人都不认同自己是在做一个严谨的工程学科，而是认为自己是一个蓝领。这个认知决定了行业的高度，决定了互联网软件行业的发展。
快的层次 # 互联网是大家认为的大量创新，大量机会的行业，就像美国建国初期的西部淘金一样。而在淘金热的工程中有几个人的名字被记住，多少人真正的从淘金热中获取了财富？在放下行业中那些浮躁的，你怎么为公司提供更好的平台，为公司发展提供更加长期的支撑？
现在随着阿里系企业对与中台概念的大力推广，而形成了中台热的环境下。大部分公司都处于技术处于创业初期阶段，而想实现平台期所需要做的工作。业务处于高速发展阶期，但是业务想做平台期的事情。总结一句话就是野心太大，能力太小。而对于大部分公司来说，基本上都会一直处于初始阶段而停步不前。
对于这些野心太大，能力太小的该怎么办呢？第一不要被这些野心太大的人所干扰，第二想尽一切办法满足业务高速发展的需要，追重要的是为技术驱动转型做相关的积累工作。上面三点的原则，具体的实施方法定义做如下说明：
每个业务、产品功能、系统都应该从MVP开始，由MVP验证市场、客户的反馈。在获取反馈后再判断是否需要加入我们的主业务体系中。这一步的目标是尽量减少浪费，减少对于一个不确定是否会得到反馈的业务、系统投入过多的精力与时间。现在的互联网更多的方向是不断的尝试业务、盈利等内容，所以应该以最小的代价得出一个确定的方向。在MVP验证通过之后，在加入到我们的业务体系中。加入业务体系时需要按照加入规则进行相关的重构工作。使其形成真正的业务能力，可以被其他的业务线中引用。
试验田/MVP # 绝大部分公司、公司内部项目在这一步踏步不前。之所以在这一步踏步不前最大的原因在于外部人士认为做到这一步系统就算做完了，开发团队就没有作用了，就一天闲着还领高工资了。另外一个原因是因为开发也是这么认为的，开发到这一步之后开发人员之后就不知道该干什么了。这是因为在这一步开发人员没有从一些教科书中学习到这只是一个开始。
在这一步其实是作者之前提的实验田的概念。试验田就是为了验证公司新开展的业务，验证业务线，验证盈利模式等等需要快速验证的工作。所以对于公司内部业务来说，业务都应该现在实验田中孵化，并在实验田中真正验证业务服务是否真正值得发展、值得深入挖掘。
实验田的特点是以业务实现为目标。所以，所有的技术都应该用熟悉的，不进行微服务拆分工作，不拆分数据库，不设计缓存。总结就是指考虑功能需求，不考虑任何非功能性需求。在这种情况下需要限制MVP系统的受众，不能扩散到太大。扩散到太大的时候就可能造成各种问题。
公共平台 # 在实验田中服务的项目经过验证后，可以进入系统的公共平台。这一步的主要目标是将业务形成能力，形成可以公用的、通用化的能力。然后在这个能力的基础平台之上再去做新的业务的试炼工作。
基于上面的说明。公共平台的特点是一步一步形成的，而慢慢的会形成一个特定解决方案下的公共平台。这个平台也需要一个完善的规划，这个规划与公司的业务蓝图需要有关系。如果没有公共平台规划可能会形成一个不知道要做什么的平台。服务提供能力参差不起的情况下，是不能为业务创新提供能力的，所以是不能解决现实中需要降本增效的问题。这样下来服务就和原来的目标不一致。
公共平台平台是一步一步逐渐形成的。不过在进入公共平台前需要先做一些事情。具体工作内容可以参考0.微服务方法论-1.微服务落地事项相关的工作。一切可以提供出来能力的服务都可以进行公共化。在这个基础上建设一套完善的技术，业务公共平台。
技术驱动 # 凯文·凯利：所有的公司最终都会像软件公司。这句话展示出大家都在涌入软件行业。大家都涌入之后相伴着就会有同质化，低质量的竞争，那现在我们应该怎样和这些同质化，低质量的公司拉开差距呢？可以参照04.软件产品公司竞争力。这片文章中说明软件公司的最终竞争力技术竞争力，也就是怎样深耕行业、深入的行业和技术结合。
总结 # 所有的事情都是需要原则性指导的，在方法论上指导工作的演进可以很好的控制与管理。在实施过程中遇到的问题方法论的最佳实践中都是可以进行借鉴的。作者认为借鉴前人的经验解决我们的问题才是最快的解决方案。不要想某些人提的我们就是要摸着石头过河，而不远处就有被你视而不见的坚固的桥梁。</description></item><item><title>软件资产</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E8%B5%84%E4%BA%A7/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E8%BD%AF%E4%BB%B6%E8%B5%84%E4%BA%A7/</guid><description>一个软件公司怎么积累自己的资产</description></item><item><title>什么摧毁了互联网行业？</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E4%BB%80%E4%B9%88%E6%91%A7%E6%AF%81%E4%BA%86%E4%BA%92%E8%81%94%E7%BD%91%E8%A1%8C%E4%B8%9A/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E4%BB%80%E4%B9%88%E6%91%A7%E6%AF%81%E4%BA%86%E4%BA%92%E8%81%94%E7%BD%91%E8%A1%8C%E4%B8%9A/</guid><description>公司级的软件过程实践系列文章，请参见连接。
背景 # 现在的软件行业已经被摧毁殆尽了。现在大部分互联网公司都在跟阿里学，学习阿里的成功模式。想通过复制阿里的方式实现自己的成功。所以，真个行业都在跟阿里学，学阿里的管理、文化、技术等等。但绝大多数公司不会学习阿里内部的工作流程、交付过程等。也绝对不会学马老师的另外一句话：“只知道挣钱是没出息的公司”。为什么呢？其实原因很多。
从业者的问题 # 现在互联网行业中的从业人员很多都是因为互联网行业的收入高，而义无反顾的投身进来的。这样就造成了行业内人员水平参差不齐。通过培训进入软件行业的从业者越来越多、未经过正规软件过程训练的从业者越来越多。这群人作者认为逻辑思维能力都欠佳的情况下更不用提很好的实现软件。
一个行业内从业人员的水平决定这个行业的高度。就像医生，必须是硕士及以上水平才可以，建筑师必须通过国家认证才可以。而软件行业，随便一个工作5～6年的人就敢称自己是CTO，技术总监，高级PM的人比比皆是。这些人有肯能连架构模式、CCB、DOD都不知道是什么，那他们能把企业带向何方就不言而喻了。
决策者的问题 # 决策者对于软件行业是一个工程技术类行业的不认同。就像建筑行业里面认为挖沟机驾驶员谁都可以干一样。决策者很多时候不理解我们所说的软件行业是一个知识密集型行业的说法。
决策者所关心的就是我找几个技术来，帮我实现我想要的东西就好。这群人不必要给我提出意见、建议，一切都必须按照我的来。每个决策者都认为自己是乔布斯，只要跟着我干，我就可以带领你们发家致富。
对于这种决策者来说，软件从业人员要远离。他们再和你合作一段时间之后都会抱怨软件团队不给力，而他们也不会在软件研发开始时告诉你他们想要什么。也不会论证他们想要的和市场上要解决的问题是否匹配。
一般不懂互联网行业的人，都是一群逻辑思维不严谨的人。对于严谨，谨慎的工程技术类专业人才来说，要不就cover住这个人，要不就不要和这群人合作。
摧毁因素 # 对于上面所说的两类人有一些共同的特点。这群人的特点是不能深入的理解与分析问题的本质，并针对问题本质进行问题本质的解决。喜欢流于表面的解决遇到一个问题解决一个问题，不能触类旁通。在这个基础上我分析了几个缺少的方面，在下面一一说明。
缺认知 # 现在有很多书都在说认知升级的事。按照我的理解认知就是一把没有刻度的尺子，对于同一件事情来说。不同的人在这把尺子上的刻度也是不一样的。有些人对于软件的认知就只有一个刻度，有些人对于软件的认知可能就会分成好几百个刻度。这就是认知的深度不同，导致不同的人对于同一件事的认知是不一样的原因。
不认同软件复杂度 软件复杂度的一个体现是所有人都说不清楚想要什么的情况下就要进行开发。不明确的需求，开发出来后改。如果是这样的一个实施过程，大家都没有算过成本对比。这种成本对比最少在1:10，之前想清楚想要什么，然后在投入实施的成本会比上来就动手实现的成本低得多。因为软件开发人员的费用是很高的。需要充分利用软件研发人员的资源，而不要被想怎么做这种低成本的事而干扰。
不认同前人经验 很多人都喜欢按照自己的意愿，从新创造一个什么东西。然后用来彰显自己的能力。这其实已经是一种无能的表现。因为《以史为鉴》就是能让我们借鉴前人的经验去改善现实中的情况。不过中国人都有这个特点，这要从中国人的思维方式说就比较大了。
不认同事物发展规律 对于软件过程中的各个步骤来说，不尊重，不使用。这些步骤、方法都是软件行业内经过数学方法验证，经过很多年实践得出的结论。就在这样的情况下形成的事物发展规律总结都不能得到尊重与相信。
不认同人的认知规律 人不可能一次把一件事情的认知提升到最高。不管是多聪明的人都需要有一个认知过程才能真正深入理解一件事情。对于这个过程在软件业内尤其重要，因为软件行业是一个“知识”密集型行业。知识密集型行业内部进行信息交换、沟通的成本就会比较高。以为每个人的知识体系，背景都不一样。在说同一件事时，每个人都是基于自己的知识体系，自己的认知体系进行理解的。所以即使是认同同一件事也非常有可能从不同的角度进行认知的。 很多时候决策者认为他只要说明一遍他的思路，然后所有人就都可以理解。信息传递过程其实是一个认知过程，也是一个复杂的，需要反复进行的事情。
不认同规则 我很早之前就非常认同一句话：
规则对于智者来说是指导，对于愚者来说是遵从。
而大部分国人认为规则是对自己的限制，这说明中国人是很不喜欢最受规则的。也不可能做到：
不从心底相信规则的力量。
最不到这一点就更不要提了解规则背后的意义。不了解意义只是照抄形式的情况下永远会失败。例如：国内的敏捷实践。
缺方法 # 很多从业者不认同方法的重要性，不理解方法怎么指导实践。而一味的认为不需要方法，现在这么干就挺好的、不需要改进。这样对于一个软件研发团队来说是可怕的。如果一个研发团队陷入到不学习，不改进的过程中就会陷入一个无法自拔的泥潭。永远跳不出来，没办法真正的成长为企业所需要的团队。
缺少对于未知的应对方法 绝大多数团队的方法是引入新人。但是引入新人对于团队来说是不能长期应对未知的。因为团队也不可能是所有未知问题都可以解决的。而且新人会被团队内部的氛围所同化。
缺少建立体系化思维的方法 不建立体系化的思维方法就没有办法跳出原来的坑。没有跳出原来的坑的能力，就没有办法为团队持续改进。
缺少问题分析方法 现在行业内遇到最多的问题是流程问题，而流程问题的分析能力，分析方法是绝大部分从业者所欠缺的能力。而业务问题，技术问题的分析也有着很大的短板。
缺少实践方法 根本方法去接受现实，所以就更不要提成为有理想的现实主义者。现实中的很多问题是可以解决的，但是在解决的过程中怎么实现理想就是我们接受现实的方法。有了这个
缺少体系化方法论 对于公司的发展，技术的发展，流程的管理没有很好的把控。不能看到公司未来的发展，一个人有未来的规划能力才能真正的成长为公司的中流砥柱。
缺思考 # 很多公司会以“忙碌”限制思考、会以业务压力限制思考、会以无知限制思考。限制形成学习性组织的情况下，还没有人能够为团队思考。这就是现在很多公司的特点。
而有时候甚至会发展成为：拿无知当光荣。我不知道这个该怎么做？技术上解决不了？业务流程不通？等等。
缺耐心 # 直白一点说就是给你发工资是让你来干活的，不要给我一个长远计划。不要给我说你实现不了。我现在就要。 我认为每个人对于团队来说都是一种合作关系，而不是一种雇佣关系。雇佣关系中肯定会有上下级关系。不能通力合作，就不能发挥每个人的潜力。不能充分发挥每个人的作用。
总结 # 互联网要改变的是什么？互联网要打破的是什么？从国内很多互联网成功案例中可以得出一个结论，互联网需要打破规则，改变关系。
而很多互联网从业者以无知当光荣，拿无良当忠诚。这种氛围充斥着整个行业你说这个行业能不快速崩溃吗？
参考 # 认知过程三角</description></item><item><title>什么摧毁了互联网行业？</title><link>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/00.%E6%A6%82%E8%BF%B0/00-%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88/</guid><description/></item></channel></rss>