<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>01 规划 on</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/</link><description>Recent content in 01 规划 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Apr 2023 12:52:56 +0800</lastBuildDate><atom:link href="https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml"/><item><title>01 大型互联网应用全景图</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/01-%E5%A4%A7%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E5%85%A8%E6%99%AF%E5%9B%BE/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/01-%E5%A4%A7%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E5%85%A8%E6%99%AF%E5%9B%BE/</guid><description>起因 # 在写另外一篇博文时，发现找不到一种通用的网站全景图。每个大型网站都有自己的一套后台系统，从各个方面看到的资料了解到的都是网站的细节。都不会为大家总结出一个通用的架构，帮助产品经理、系统架构师、系统分析师、CIO、CTO、COO等创建一套完善而又通用的整体架构。
在之前写过一篇《软件公司基础设施》主要阐述在软件公司在怎样的基础设施下才可以支撑上层的应用开发，并且也说明了怎样在基础设施的支持下为客户交付价值。本文提供完整的一套大型网站体系，可以从更高的层面上提供实施规划或者方向。
本文提供完成的大型网站全景图，也可以为创业团队提供并制定系统的规划，并可以分阶段、分范围的去具体实施规划。
从技术上讲也可以说明一下前后端开发的占比。前端开发最多的是为了适配新的客户需求，新的营销方式，新的界面风格。而后端主要是为了实现系统整体的业务。
所以，综上需要有一套大型网站的全景图，来帮助解决上面说到的这些事情。
全景图 # 这里给出的是一个大型网站的通用全景图。本图中的划分方法是按照系统去划分的，也就是说这个图中最小的每一块都是一套完整的系统。所以，简单的认为这些内容可以在一个系统里面全部实现是不可行的。
从这个角度简单的说明，如果要实现一整套系统（可以达到BAT等级的系统）。需要的软硬件成本不是一般的公司可以承担的。所以，这就是为什么各种传统企业的人在看，在做各种各样的系统都没有成功的推到线上并形成规模。
在投入这个行业前慎重思考，考量自己与行业是否适应。并考虑各方面的投入是否可以承担。然后在慎重的踏足这个行业。不过在各种各样的创业书籍里面也会告诉读者需要考量那些内容，考量之后达到的程度才可以投入，我这里只是多嘴一句请慎重考虑。
从上图中可以看到还是分了几个部分。这几部分是按照软件公司的大概人员分工划分的。专业的人事做专业的事情，才可以有效的完成事情，并提供最好的建议。下面具体说明这几个部分：
界面： # 专业人士：UI，UX
现在流行的几个界面端有PC端，APP端，微信端。基本上都是C/S结构的端，后端是比较通用的也可以支持B/S结构的形式。这一层主要是为客户呈现服务，不管是任何形式的网站都是需要为客户呈现内容才可以满足用户的需求。
业务： # 专业人士：BA，产品经理
网站提供的服务是这层实现的。不过还是可以规划出来几个通用的业务系统的。这些系统都是非常专业化的系统服务，并且每一个都有专业化的公司去帮助软件业界低成本的解决服务。业务层内有一个SaaS服务，主要是为了满足最终客户入住平台的方式。下面大概说明一下服务的内容：
LBS（本地化服务），根据位置为客户提供服务。 SSO（单点登录），统一化登录系统，企业业务整合的解决方案。 广告，各种形式的广告展示。 搜索，为客户提供各种搜索服务，方便为客户提供服务内容。 OpenAPI，在大型网站时会形成流量效应、或者会网站就是为了提供服务的。 支付平台，对接或者自有支付平台的系统。这里需要考虑的安全比较多。 后台业务，前台隐藏下的后台业务。 还有很多其他的服务，例如：地图服务，短信服务，消息推送服务，即时通信服务，视频服务等等。 运营： # 专业人士：产品经理
这里是支持网络服务运营的软件系统，不包含像：stp战略这样的内容。运营最主要的是分析指标：为产品经理提供数据支持，帮助产品更好的成长。其他的就是为了运营作为支撑客服系统，反馈系统。商业智能可以帮助企业决策层进行决策支持。在任何形式的服务中都会对客户的习惯，以及喜好收集并进行推荐。
运维： # 专业人士：运维，QA，SCM
运维是维护系统的硬件，软件，部署过程等。在运维模块中包括：IaaS、PaaS、DevOps部分。为上层的应用提供基础运行环境，具体内容就不多赘述了。
开发： # 专业人士：项目经理，开发，测试
开发的支持，可以参见《软件公司基础设施》。
参考： # 5款Java错误跟踪工具 闲话IT运维&amp;ndash;系统运维和业务运维 运维平台规划体系全介绍 京东数据库智能运维平台的建设之路 腾讯运维体系：蓝鲸设计思想、架构与核心功能详解
如何通过数据分析来衡量产品改版的效果？ 改版调研经验小结：效果评估的三个意识，五个环节，两个扩展</description></item><item><title>02 创业团队怎么实现想法？</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/02-%E5%88%9B%E4%B8%9A%E5%9B%A2%E9%98%9F%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E6%83%B3%E6%B3%95/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/02-%E5%88%9B%E4%B8%9A%E5%9B%A2%E9%98%9F%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E6%83%B3%E6%B3%95/</guid><description>前提 # 本文为《大型网络应用全景图》的续编。也是为了帮助各种想转型，各种想进入互联网行业的人们提供一个简单的对比。让各位了解一下进入需要考虑哪些东西，怎么样选择团队的搭建等等内容。
举几个例子：
滴滴的第一版 # 在百度上一搜就可以知道滴滴第一版的事情。简单总结一下在滴滴刚起步时需要一个软件团队来帮忙实现程维的想法。程维想的是又快又好又便宜的上线并验证想法，软件团队想的是付出多少就会有多少回报，软件团队的成本是比其他行业高的多的。所以虽然钱花出去了，东西有了。最终落了个最悲惨的结局。
创业团队技术负责人带走整个团队 # 前一段时间听一个朋友说，他们的团队技术负责人在上线的前一周离职了把整个技术团队都带走了。具体原因就不说了，大概说一下情况，一个金融行业的人想出来做一个面向最终用户的商品推荐平台，运营的人说如果产品上线，一周内可以推广10万人使用。这个创始人说上线时可以引入2000个高端品牌。我相信这是一个非常好的项目，但是忽略了软件研发是需要投入的。简单分析：产品是有自己的运营渠道的，可以进行很快的推广。创始人是经过了很长时间的走访调查的才能积累这么多的品牌。软件研发人员就是被招进来立马就要做出来可以支撑10万人系统的。凡是都是需要一视同仁的，运营经过多长时间积累下的渠道，创始人是经过多长时间积累的想法与品牌。研发也需要经过很长时间的搭建，才能搭建出一套完整的系统的。
小公司为了省成本被骗 # 大概说明一下前因后果。公司从外面请一个团队帮忙实现想法，想法实现了。因为小公司不懂整体的开发与交付过程。所以在项目交付时没有交付任何形式的文档，代码的内容。项目就直接上线，并开始运营。在前一段时间的运营过程中还是比较好的，公司请团队修改，添加功能都还是比较好。后来因为各团队运营不善，项目修改与添加功能迟迟不能支持。公司只能一直付费，然后进行功能的添加。然后，后来还听说团队在代码内加了限制，限制系统上的用户数。被威胁不付费的话就不要在想使用。（这个绝对不可能是研发人员赶出来的，肯定是一些城府很深的业务人员要加的）。
所以，团队肯定是自己组织好，但是自己组织没有把控力。可能被技术负责人直接整团队带走。总结一下可以说：就像其他行业(如：建筑设计，药品研发，芯片制造)一样，软件研发不是谁想做就能做的。但是，软件研发也有它自己的特点，它需要跟各个行业结合才有价值。所以，不管在什么样的情况下双方只需要做到诚而不欺即可达到最好的发展。
写这篇文章就是为了解决这些现象。就有可能会出现一些人会怀疑说，你写了这些，谁还会找你咨询，找你做实现？
我遇到的事情也是比较多了。遇到各种各样的不靠谱的事情，所以，想在这里劝解一下各位想进入互联网行业的人。不要轻易的进入，如果要进入，还是要考量清楚之后在进入。 我相信世间还是好人多的。不要被骗，也不要骗人。 知识是需要输出的。没有输出，就没有意义。并且你的一点点输出说不定哪天就能为整个行业的提升做出巨大的贡献。 在本文中会对比使用外部力量来帮助实现和自己组织团队之间的区别、不同等内容。这里不会具体把两个的成本列出来，因为成本是显而易见的。在这里更多的讨论的是团队背后的事情，这些也是为了让产品(项目)能更长远更好的发展的一个前提。
下面会以项目制（外部力量帮助）和产品制（自己组织团队）这两种方式在各个事务上的对比描述各自的优缺点。其中涉及九个大方向，每个方向都会有具体的说明。并在最后会对这九个方向进行一个大致的总结。下面让我们One By One的看一下这几个方向的内容。
目标 # 每一个人在做任何事情之前肯定要知道目标是什么，用目标来知道我们的具体实施过程。所以，一个团队或者一个公司肯定也是有自己的目标的，用这个目标指导项目团队管理，实施过程管理等等的软件过程管理工作。下面分别说明不同团队在目标上的不同：
项目制的目标： # 在需求方规划的基础上，需求放将规划的一部分交个项目方进行实现。由项目方为软件客户解决某方面的问题； 软件开发公司与软件使用公司项目合作，达到双赢的目标； 项目方可以在实现过程中积累行业经验，为深入行业内部做前期工作； 在实施过程中可以对项目方自己的业务体系、技术体系、咨询体系、管理体系进行不断的升级与优化。 产品制的目标： # 解决行业中的问题，并通过这个途径完成项目； 将系统服务运营起来，并实现盈利； 为客户提供更好的服务，提升客户满意度； 形成完整的产业闭环，从产业闭环内赚取利润。 总结： # 从目标上就可以看到项目外包和自研项目的主要区别在于项目制时的软件实施公司更注重自身的成长与发展啊。产品制公司更注重产品是否能上线，能吸引客户，能够盈利。 在软件研发过程成需要有很强的业务规划能力和软件过程把控能力。不是不经过长期训练就可以实现对软件的研发、运营、运维的整体认识； 这里隐藏一句话。如果有兴趣可以加我微信，我可以单独发给你。 产品规划 # 目标明确之后，接下来就要对产品进行规划。本阶段中所有的内容，在二流及以下的项目制团队中都不会有涉及。除非像一流的项目制团队或者咨询公司中才会有。例如：ThoughtWorks，埃森哲，IBM，HP等等。
产品规划 # 产品规划是指产品规划人员通过调查研究，在了解市场、了解客户需求、了解竞争对手、了解外在机会与风险以及市场和技术发展态势的基础上，根据公司自身的情况和发展方向，制定出可以把握市场机会，满足消费者需要的产品的远景目标（Vision）以及实施该远景目标的战略、战术的过程。
阶段规划 # 在信息系统架构设计阶段，确定主要的信息类型和处理这些信息的应用系统。在本阶段有两个主要的步骤，数据架构设计和应用架构设计，二者既可以依次开发，也可以并行开发。核心内容为：IT系统如何满足企业的业务目标；信息以及信息之间的关系；应用以及应用之间的关系。
运营模式 # 一般来说，运营的目标不同，基于目标的手段也就不一样。对一个产品来说，基本的运营手段至少包括三种：内容运营，活动运营和用户运营。
内容运营是最古老的运营手段之一。通过内容去打动用户，以内容为主的产品会更具黏性，媒体产品就是一个非常典型的内容产品。包括微博也是，微博现在已经成为了一个通过内容去打动用户的产品，所以对新浪微博来说，内容运营是非常重的一块。
一般来说活动运营有两个目标，一个是结合市场部门需求，起到吸引新用户的作用；另一个则是结合用户运营需求，起到活跃用户的作用。做一个活动运营（或者称之为策划），我们更关注的应该是执行过程的细节，并通过活动的投入产出来衡量活动效果。
用户验证 # 用户体验（User Experience，简称UE/UX）是用户在使用产品过程中建立起来的一种纯主观感受。但是对于一个界定明确的用户群体来讲，其用户体验的共性是能够经由良好设计实验来认识到。计算机技术和互联网的发展，使技术创新形态正在发生转变，以用户为中心、以人为本越来越得到重视，用户体验也因此被称做创新2.0模式的精髓。在中国面向知识社会的创新2.0——应用创新园区模式探索中，更将用户体验作为“三验”创新机制之首。
企业运营 # 需要进行企业内部的运营管理。使用各种各样的方式进行运营过程管理，产品过程管理，实施计划管理等等企业运营管理过程。
总结 # 产品制公司需要有很强的业务支撑能力，项目才能真正的进入实施阶段。需要有业务分析能力，才能形成完整的业务闭环。需要有完整的企业内部流程管理，才能真正的驱动开发过程。所以，这些内容不可能交给一个项目制公司去代管。需要有产品制公司整体的想法与过程才可以真正的支撑起来项目团队与运营团队。
需求调研 # 不管是项目制还是产品制，跟研发团队沟通时都需要SMART原则下的项目需求。因为这一步已经进入视线阶段了，如果需求仍然不够明确那研发团队做出来的东西肯定和你想的不一致。这个时候不要怪研发团队怎么能这样，这是因为你自己没有说清楚。所以，需要进行业务调研、业务分析、业务设计工作。
业务调研 # 让产品经理、研发团队充分的理解业务的目标，业务过程的一个过程。然后产品经理会根据了解的内容进行业务分析并进行业务建模工作。</description></item><item><title>03 传统企业转行互联网步骤</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/03-%E4%BC%A0%E7%BB%9F%E4%BC%81%E4%B8%9A%E8%BD%AC%E8%A1%8C%E4%BA%92%E8%81%94%E7%BD%91%E6%AD%A5%E9%AA%A4/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/03-%E4%BC%A0%E7%BB%9F%E4%BC%81%E4%B8%9A%E8%BD%AC%E8%A1%8C%E4%BA%92%E8%81%94%E7%BD%91%E6%AD%A5%E9%AA%A4/</guid><description>前言 # 本系列文章的上一篇中说明了一个传统的企业在选择使用项目外包制还是自建团队之间的区别。其中最重要的是传统企业需要有规划与监管能力，这样就可以在任何团队形式的情况下都可以把产品真正上线并且运营起来。
这两年有一句话比较流行：“每一家公司都在成为软件公司”。这说明一种现状，所有行业的公司都在发展自己的软件能力。这说明现在很多公司在实体经济中遇到的问题都想以软件解决方案的形式来解决，并且公司还想用软件的业务增长和应收增长来替换原先传统的增长点。以软件的业务占比替换实体经营的占比，以降低重资产对公司运营带来的制约。
软件行业相对于其他行业来说是一个新兴行业，所以，在公司成为软件公司的过程中就会遇到各种各样的问题。不过随着软件行业的发展以及传统行业公司对软件行业的认知度的持续提升，在公司成为软件公司的过程中也都会有各种标准化的解决方案。
我相信：事物是持续发展的，人对事物的认识也是不断变化的。所以，从发展的角度看要一个公司如果想成为软件公司，这个公司或者公司的管理者对软件的认知也是在不断的发展的。这就伴随着企业中软件团队的形态、软件流程的实施、软件团队与业务团队间关系等等的变化。
下面主要说明一个从传统行业的公司转型到一个软件公司所需要经历的过程。
混沌模式 # 以“混沌”命名这个阶段是以一种形象的方式描述这个阶段对软件的认识。这个阶段中企业对软件不能形成完整而准确的认识。像上面提到的软件系统规划与运营过程没有任何概念。也没有办法认识软件系统对企业的真正意义。
这个阶段主要是公司意识到需要在公司内部进行信息化推行工作。例如：政府的网上办事，企业的无纸化办公，企业的流程监控等等。
所以在这个阶段企业使用软件是为了满足一些原先线下的业务搬移到线上的过程。企业将的内部流程搬移到线上后，并把企业内部管理资料、管理过程进行数字化的存储于使用。这个时期软件不会为企业提供更多的支持，并且企业也不能意识到软件能为企业运营的支撑带来多大的好处。所以，这个阶段的特点是很明显的。
特点 # 懵懂的、迷茫的。简单的认为软件就是一个工具，就想一个车间里的机床。公司有机床就可以生产工件。 夸大的、万能的。简单的认为有了软件就可以提升公司的运行效率，以及公司的整体发展。 神秘的、不可触摸的。软件就是一个网址，软件就是一个桌面应用。形象一点的话就是认为软件是一个神秘的领域，这个领域里面大象可以飞上天，UFO天天来。 无法控制的。认为软件实施过程、运行过程、运营过程都是不可控制的，并且在软件项目上的投入是不可估计的。 状态 # 使用购买成型的软件产品，并以这些软件产品形成企业内部流程。 在公司的采购部门的主导下，进行软件产品的采购，投标，实施的过程。 未意识到公司的发展把握在企业管理人员手中而是把所有的企业发展都寄希望于软件产品。 这个阶段中企业接触到的软件公司基本上可以认为是某个领域中的佼佼者。这类软件公司对企业运营不慎了解，并不愿与企业进行深度的合作。例如：有专业做CRM的，有专业做财务的，有专业做ERP的，有专业做仓储的等等。这些软件公司都是在某一个行业里做的较好，对企业内部真正的需求不进行了解与管理。这将导致一些问题。这些问题会在下面介绍。 软件意义 # 以软件产品采购的形式与软件公司合作。 稍微大一点的公司回由IT运维团队进行产品的运维工作。用以支撑企业对信息化基础的支撑。小公司可能有软件公司进行代管。 没有听说过软件流程概念，或者不知道软件流程的大概过程。 沟通方式 # 天地初开 # 从原先的认为软件可以为企业运营做指导，到意识到软件只是企业的运营的支持。这是一个质的飞跃。软件从企业运营指导的地位到达，可以主动的跟软件公司、软件实施团队进行讨论。
“天地初开”是企业对软件的外层有一个大概的认识。在经过“混沌”阶段时企业在软件上已经投入了很多。企业管理者在这个过程中投入了很多时间，精力去理解软件具体可以为企业提供什么，并逐渐的了解软件的销售与收费方式。企业为软件的运行投入了人力、物力，软件运行需要有硬件环境支撑并且需要IT运维人员管理系统。
企业在“混沌”阶段，大概了解了软件是有很多种实现方式的。例如：可以购买成型产品，可以找定制化软件公司定制软件。了解了软件的收费方式可以有很多种。例如：买断型付费，按使用人数付费，按使用时长付费，按软件功能付费等等。还可能会了解到软件知识产权归属问题、业务形态保密、软件时常出问题需要运维、软件不能满足企业要求的解决办法等问题。
在“混沌”阶段中企业可能会形成比较完善的软件采购过程，并形成软件运维流程。企业对软件的认识也到达一定阶段，企业在这个阶段认为软件是一种工具。企业中对软件只是一种工具，可以帮企业解决某些问题的工具。
购买了软件产品后，在运行了很长的时间后发现了一些问题:
软件限制了企业的发展 软件产品每年都在收费 各个软件系统之间的数据没有办法汇总 特点 # 认为软件是一个器具。在软件上线后认为它就是可以用的，并且可以一直使用下去。就像购买软件就是医院里购买了一台CT机，买过来就是一直可以用的。相应的软件从业人员就是操作这台机器的操作员。 认为软件是什么事情都可以实现的。例如：在手机上可以实现根据手机壳的颜色更换手机主题，可以从收费网站上不缴费的情况下抓取收费内容。 还是不知道公司想要什么。在这个阶段比较大的特点还是不知道软件能帮忙解决什么样的问题。 状态 # 会思考为什么花了这么多钱还是这样的一个效果。 会思考怎么才能让软件支撑业务的发展。 开始慢慢的建立软件系统化平台，用于支撑企业中处处的应用。 软件意义 # 使用软件产品与定制化软件形成软件环境。 渐渐的了解企业运营的核心，在运营核心上使用软件支撑系统。 沟通方式 # 女娲补天 # 这是最后一个上古时期。我们知道上古时期的发展，还是以禅让制，公有制为基础。并没有完整的社会分工与登记制，所以就会造成没有完善的发展。不能有效的利用社会生产力来制造财富。
在转型过程中对应着企业管理者、企业决策者不知道公司的发展规划怎么用软件来支撑。也不能从战略层面了解企业内部业务的具体施行情况以及客户反馈等等。所以，这个阶段是业务先行，软件跟随的方式进行的。
在持续的企业信息化过程和转型过程中，企业的软件系统、平台、项目会越来越多。多个系统在经过一段时间的运行、运营后会发现各种各样的问题。这些问题会集中在这个阶段爆发出来。因为这个阶段企业已经有了很多系统存在并运行了一段时间了（2~4年），但是又没有从企业管理者的整体规划方面进行指导。所以，前期的阶段就会成为软件野蛮增长的阶段，不同技术体系，不同运维体系，不同运营体系，不同软件实施体系的项目都会在这里混合存在。
企业在实施软件的过程中会有多种软件服务商接入：软件服务承包商、软件产品提供商、软件服务咨询商、软件服务集成商等。并且每类服务商都有可能有多个，这些服务商之间如果产生交互、交叉、协助的问题，就有可能产生服务商之间利益冲突的问题。
上面说服务商之间会有利益冲突的问题。还有另外的一类问题是在于经过很长时间的运行，会发现原先的企业业务已经发展了，但是软件系统还是原先的软件系统。原先的软件系统已经无法满足现在的业务变化的需求了。
企业软件在运行了2~4年之后，会发现这些系统的稳定性大幅降低。最简单的事情就是原先运行正常的系统，动不动就卡住了、崩掉了、死锁了。需要有运维人员天天的盯着它，一有问题就需要立即处理。现在在找软件服务商去解决的时候，发现服务商都不见了。
特点 # 伴随着系统使用时长的增加，以及使用量在加大就会遇到各种各样的问题。 企业管理者在这个过程中会与软件公司沟通和交流，感觉软件业界都是在吹嘘新概念、鼓吹新技术。对企业在软件使用中遇到的问题都是使用新做一套系统来解决。慢慢的企业管理者会感觉所有的软件从业人员都是骗子，不值得相信。 状态 # 进入一个无尽的黑洞 - 运维出现大问题 - 不能满足企业业务发展需求，重新开发 软件意义 # 开始了解以及学习软件过程、生命周期知识 准备开始由企业进行软件团队的组织 开始以业务分析或业务导向的方式来制作软件系统 沟通方式 # 郡县制 # 使用郡县制替代分封制。这说明已经过了用人唯亲的阶段，并杜绝了地方独揽大权的方式。从软件方面看就是不是BU制或者说已经度过了个人英雄主义的阶段。在这个阶段只要大家各自把各自的工作做了（不用做好），就可以把整体的事项完成。更不存在一个人的变动把一个团队搞垮的情况。</description></item><item><title>04 软件产品公司竞争力</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/04-%E8%BD%AF%E4%BB%B6%E4%BA%A7%E5%93%81%E5%85%AC%E5%8F%B8%E7%AB%9E%E4%BA%89%E5%8A%9B/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/04-%E8%BD%AF%E4%BB%B6%E4%BA%A7%E5%93%81%E5%85%AC%E5%8F%B8%E7%AB%9E%E4%BA%89%E5%8A%9B/</guid><description>概述 # 1. 软件公司 # 随着软件在国内的蓬勃发展，软件行业也在国内发展处不同的细化分工。不过国内的软件行业发展与国外的软件行业发展还是有着很多的不同。基本上国内的通用软件开发领域的发展是基于成本压缩和成本转件的方式进行发展的，所以通用软件开发领域基本上已经可以认为是走向同质化，廉价化的方向。软件基础设施领域的限于进入成本高、人员能力要求高、研发时间长等特点，所以需要进入并持续发展需要一定的经济与技术实力才可以。
软件行业现阶段是一个百花绽放的时期。并且在“互联网+”的持续发展过程中，各个行业也都加入了软件线上的厮杀。所以，在软件行业中已经像多年前电子产品发展的黄金阶段的华强北，形成了行业内部的产业链。
上图大概的说明了软件行业中的公司的营业模式。在软件行业中人员外包和项目外包在整个行业的最底层，基本上就是行业内的廉价生产力。并且这两类公司的进入成本非常低，就是传说中有人、有电脑就敢开的公司。
中间层上基础设施建设公司需要有一定的技术门槛。有软件基础设施、硬件基础设施、工程技术设施等等，所以这里需要有高级能力的人才可以实施。运营支持帮助其他公司做线下、线上运营。传统企业也会想与其他公司合作，我司对软件公司的控制力，软件公司的响应力都不能满足我司要求。所以传统企业会组织自己的软件部。数字化转型就是帮助企业做数字化转型。技术销售公司其实可以分为两种：1.技术的商业支持，2.技术的简单销售。不过国内绝大多数都是技术的销售，到现在为止我没有看到技术的商业支持公司。
中层的软件产品公司是本文要分析的内容，下面会做具体分析。中层分化出各项专业公司去做各自方向的支持。可以在底层的生产力的基础上秀出一点花。
上层基本上是领导行业发展的公司。行业的新的业务方向、新的运营方向、新技术的实践应用、新的软件过程实践应用都是有这类公司主导的。所以，软件行业的两个风向标的第一个出现。
右侧是前沿技术、前沿方法论研究以及转化的公司，软件行业的第二个风向标。现在研究人工智能的公司（不是应用的公司）就是在这个行业中的公司。
2. 软件产品公司的困局 # 借鉴国内对各种行业的竭泽而渔的发展模式，软件行业也会很快进入一个恶性竞争阶段最终形成同质化、廉价化、低质感的阶段。看看国内的各个城市的电脑城，看看ofo就可以推测出软件行业的发展趋势。现阶段有60%左右的软件从业人员在外包公司中工作，20%的公司在BAT这样的大公司工作，还有20%的在软件产品类公司工作。所以，从这个角度看基本上已经进入了恶性竞争的阶段。
软件行业是发展迅速的，现在已经是一个完成的产业链了。一个未接触过软件的公司需要进行企业数字化转型、或者研发特定行业内的软件，可以非常容易的找到各个层面的解决办法。找数字化转型公司，可以帮公司做整体转型公司。找项目外包公司，就有可以帮公司开发软件的。找业务咨询，就可以帮助公司做风向指导。
在各种各样的软件公司里，软件产品公司就是现在“互联网+”模式应用最多的公司而且有又有真正的自主研发能力的公司。很多软件从业人员都想从外包中跳出来，进入这种可以提供成长的地方。所以，在不同人员向往的情况下。很多人涌入，这也带来了软件产品行业的问题。软件产品行业开始进入了同质化的阶段。
软件产品行业中怎么从红海中厮杀出一条路，怎样组织处一个有效的模式，这些是需要每个软件产品公司思考的内容。下面具体说明。
竞争力表现 # 软件产品公司第一步肯定是要有一个产品的想法，在这个想法的基础上去做MVP。这个想法会是公司初创的原因。但是伴随着公司的业务进行，会发现很多类似的想法在不断的出现。不断的被同行者超越。所以，在残酷的竞争中怎么保持自己的风格、节奏，继续的走到最后？
软件产品行业从某种角度说就是一个没有进入门槛的行业。在没有进入门槛的行业怎么发展自己，就需要认真的思考了。在这里有一个公共的思维方式，如下图所示：
这里我分了三类。第一类商业，这里主要做的就是保证业务能持续的发展，并且在商场中屹立不倒的能力。第二类软件，这里主要做的是商业上的创新吸引来的客户使用软件方法留存并提高粘性。第三类是技术，这里做的是帮助公司进入一个高门槛，拉开与其他公司的差距。
1. 商业 # 随着软件业务的构建与运营的持续发展，公司的管理者、经营者会对公司的业务有新的理解与认识。可能在这个过程中不断的调整业务方向，但是需要保持一个初心。因为这个初心是业务基石，如果频繁的换这个基石是对创始公司的核心的一种否定。基本上出现这种否定，下一步一定会走向否定公司的情况。
业务池是公司把握业务方向的方法，也是公司的$\color{red}{核心竞争力}$。因为在很多同类产品中，各自的业务池是不一样的。也就最终决定了公司的发展。
思维模式会体现到公司文化以及运营方法上。更加开放的思维模式，更加有责任感的思维模式就是帮助公司运营。保持稳定的业务池就是思维模式，意识到知识共享在公司内部的重要性，价值链导向也是一种思维模式。类似于此的思维模式就组成公司内部的思维模式。精益企业就是公司的思维模式的最佳实践。
在企业发展的各种结果中，发展为大企业都是公司所向往的。发展为大企业的过程中肯定会继承初始阶段的各种隐形的模式或习惯。所以在初创阶段思维模式是非常重要的。即使最后公司被收购，其实收购公司想买的就是你的业务。不是下层的软件，因为收购公司可能会有更加完善的软件方法、更加深厚的技术能力。
2. 软件 # 在软件研发与运营中，基础设施是帮公司提升$\color{red}{同行竞争力}$。这里就可以体现出来即使公司所处的细分领域一样，也有因为公司的工程能力的不同拉开差距。例如ofo和Mobike，都是做共享单车的。ofo和mobike就差在工程这一步。
工程规范、技术规范是软件过程中的规范。这两项会有专门的文章介绍。这里就不介绍了。
3. 技术 # 不要认为技术就是你的著作权，那太低级了。而且没有人想买。而且复制非常容易，复制出来还比你的好。所以，这里是$\color{red}{真正的竞争力}$。专利是向技术发展的第一步。第二步是开源软件。
可能大家比较疑惑，专利这么难的东西是初步的技术准备？专利对真正有创新能力的公司，是非常小的一件事。所以，专利是标识创新的一个指标。但有公司有专利也不能代表公司是有创新能力的，公司有创新能力必定是有专利的。
底层的技术研发能力，也代表技术已经在行业内发展到顶尖的水平。这样可以跟其他非同行竞争者都拉开了差距。这个就更不用怕跨行业的资本注入造成的冲击。
总结 # 在残酷的竞争中处理与竞争者的关系，怎样发展自己的业务，怎样保持自己的节奏。都是需要不断的思考与变换的。最重要的一条是保持创新，保持开放。创新引领发展，开放则吸取教训。
参考 # 精益开发的七个原则与管理观念</description></item><item><title>05 为什么公司都在提大中台？</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/05-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%85%AC%E5%8F%B8%E9%83%BD%E5%9C%A8%E6%8F%90%E5%A4%A7%E4%B8%AD%E5%8F%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/05-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%85%AC%E5%8F%B8%E9%83%BD%E5%9C%A8%E6%8F%90%E5%A4%A7%E4%B8%AD%E5%8F%B0/</guid><description>大中台的意义： # 自阿里推出大中台模式之后，业界就一直在持续关注这大中台技术的发展。这里作者也想说说我对大中台的理解。作者认为：大中台就是基础设施，并且是跟广泛的基础设施。它为公司的建设与发展提供了三个能力：
$\color{red}{创新支撑能力}$； $\color{red}{资源聚合能力}$； $\color{red}{能力聚焦能力}$。 这三个能力定义了，公司/团队/社群的战斗力或者是输出能力。虽然这三个能力最终会成为公司的战斗力，但是构建这三个战斗力所依靠的是建立者三个能力的过程。所以，下面会针对这三个能力说明它们的意义和建立过程，我们下面具体的说明
能力解释： # 提到大中台，一定会联想到《赋能》这本书。因为在阿里推行大中台概念时就直接说明大中台就是为了赋能的。而《赋能》这本书里面有没有明确的告诉读者怎样建立赋能的环境以及赋哪些能力。这样就会出现，大家一直要喊叫着要赋能、要赋能，但是没有人真正的进行赋能。
因为美国的企业环境和中国的企业环境还是有很大的不同的。美国有很多大型的，历史深厚的，技术深厚的公司。而中国的大型企业的企业很少，历史悠久、技术积累深厚的更是很少。所以，他们只需要在现有的组织结构中做出调整就可以提供出很高大上的能力。而中国企业需要将自己的能力进行建立，并合理的整合起来才能向外提供赋能的能力。
综上在中国建立能够赋能的企业需要自己有能力，并整合出来。再向外提供赋能的能力。作者总结的大中台提供的三个能力：创新、聚合、聚焦。是用来提供给外部的能力，下面可以具体的说明这三个能力：
创新支撑能力 创新能力是为公司、社会提供的创新环境和基础。也就是大中台提供了公司内部快速创新，快速试错，快速反馈的能力。让公司可以快速的更新自己的业务模型，更新自己的技术实践。这种快速构建业务，并快速上线，快速的得到反馈的能力。就像一头巨大的大象可以轻盈的起舞的感觉。就像《谁说大象不能跳舞？》所要努力做的那样。
资源聚合能力 不管是大公司，还是小公司都会有资源浪费，呆滞资源。这些资源可以是知识，可以是能力，可以是数据，可以是人力，等等。资源聚合的意义在于可以将各项资源充分的，有效的利用。并且资源聚合的能力并不是叫你让所有的人都忙起来。而是最大的提高这些资源的利用率。 举一个反例：我之前去过一个传统工业企业。这个企业是当地的利税大户，所以政府给了这个企业大量的优惠。优惠包括大量的占地、政策鼓励、资源配置等等。这个企业里面有一个IT部门，负责企业内部的运维工作。而这个企业的企业主为了提高土地使用率，就在没有被厂房占用的土地上进行了各种尝试。尝试种蘑菇，尝试太阳能发电，尝试种植粮食作物等等。因为企业不是做农业的，所以在做一些农业尝试时发现又很多不足。然后企业主就想办法，企业主的办法就是把农业的事务分摊到公司的每一个部门中。也给IT部门分配了一片麦地。 这是作者见过的最令人咋舌的《向团队要利润》的代表。作者认为软件团队是一个成本团队，不是利润团队。就像你能向军队要利润？向医院要利润？向航天团队要利润吗？ 软件团队是向利润团队赋能的团队。软件团队唯一提供价值的点就是可以为其他团队赋能。
能力聚焦能力 能力聚焦能力是效率提升，迅速斩获战果的能力。公司内部不管分工再细，也会有能力不聚焦的问题。这里可以参见《聚焦》这本书。
综上，公司建立赋能，建立能力的基础就是提供给外部一个平台，在这个平台上，可以任由团队去折腾。并且肯定可以折腾出更好的方向。
建立能力： # 大中台提供了什么？让我们可以认为他是基础设施？它又以什么样的形式提供出来的？上面所说的三个能力优势以什么内容提供出来的？
对于大中台是否要建设，在刚接触大中台时是有很多疑问的。而作者会以建设大中台的方式阐述公司能力建设的方法。建设大中台可以为公司提供了业务基础，提供了实施过程标准，提供了技术支撑群。以这三个方向作为指导，建设出有意义的大中台。
业务基础： # 公司的业务基础，可以在业务基础上发展出各种变化与创新。例如：淘宝第一步做的是C2C，有了这个C2C的业务基础之后，可以在这个业务基础上发展出B2C（天猫）、二手交易平台（咸鱼）、支付平台（支付宝）。这些其实是在一颗大树上不同的主干分支。还可以分出小众的旅游公司等等。这就是公司的大方向确定了业务支撑。 业务知识库支撑。很多公司忽略业务知识库的建立过程。业务知识库其实是公司的业务核心。为产品经理的工作做了很多总结，与经验的支撑。可以让产品经理在一个有基础的地方进行工作。 实施过程标准： # 在软件开发过程中，肯定是需要各种形式的标准化，规范化的操作流程的。所以，在使用软件技术在建立业务基础的过程中就会形成很多规范，来覆盖整体整个软件过程。例如：测试标准，开发规范，运维规范等等。 这些标准一方面成为公司内部的规范，另外一方面可以提供给技术支撑或技术基础。而这个技术支撑和技术基础就可以成为最后对外输出的产业链的一部分。例如阿里开源的Dubbo，RocketMQ等等。
技术支撑群： # 这个支撑可能在公司较小的时候由行业内其他公司进行支撑，但是公司发展到一定阶段之后肯定是在公司内部需要这样的技术支撑群去做专业的支撑的。
这里面支撑包括：专业的大数据分析技术支撑，人工智能技术支撑，IoT技术支撑，区块链技术支撑，云计算技术支撑。
为公司真正的对外做通用性技术赋能做出最大的贡献的部分。也是一个公司最终实力的体现。
总结： # 有理论支撑，有实践指导。为什么不开始使用大中台呢？
参考： # 精益创业 企业IT架构转型之道：阿里巴巴中台战略思想与架构实战</description></item><item><title>06 软件公司基础设施</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/06-%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/06-%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/</guid><description>熵 # 在高中物理中，学热的时候可以学习到熵增原理。将熵增原理推广到人类社会，是一件非常有意义的事情。这里根据熵增原理，一切都将趋于混乱的。所以，在我们所从事的软件研发工作中也经常遇到这样的现象。应该怎样控制这些？
这里我提出《公司级基础设施》，用于减少熵的影响，并规范化操作规范、规范化验收准则。
基础设施 # 从网上找到的基础设施的介绍：
“基础设施”(Infrastructure)一词又可译为“基础结构”。最早对基础设施给予足够重视的经济学家当推罗森斯坦—罗丹，他在1943年把一国或一地区的社会总资本或社会总投资分为两类：“社会分摊资本”(Social Overhead Capital，SOC)和“私人资本” (Private Capital，PC)，前者即指基础设施。赫尔希曼(A．o．Hirschman)将后者又称之为“直接生产性活动”(Directly Productive Activites DPA)。这种分类观点一直为后人所承袭。
还有另外一个解释是：
麦格劳—希尔公司的图书公司1982年出版的《经济百科全书》，进而对基础设施作了比较详细的解释。该书写道：“基础设施是指那些对产出水平或生产效率有直接或问接的提高作用的经济项目，主要内容包括交通运输系统、发电设施、通讯设施、金融设施、教育和卫生设施，以及一个组织有序的政府和政治体制……”。
从上可以看出基础设施就是为了社会、组织提供基础服务的设施，用于提高社会、组织的生产水平、生产质量的。
具体内容 # 这里分析软件公司的基础设施规范。因为业内有很多类型的软件公司、专业做人员外包的、做解决方案的、运营自有产品的、专做技术支持的等等。这里讨论一般的公司运营自有产品的软件公司。
支撑一个一般的软件公司的基本的基础设施可以分为：工程体系、技术体系。工程体系整体的把控公司在软件方面的产出，技术体系控制软件公司的技术栈统一。工程体系与技术体系相辅相成，缺一不可。在工程体系分析系统的工期时，必须基于现有的技术体系。技术体系的选择，必须能够支撑工程体系中的需求。 在工程体系中又可以分为多个模型，工程体系部分会在之后的文章中陆续介绍。现在我们更主要说明技术体系。
技术体系 # 从上面一节中可以看到技术方向分很多种，这里还是以一种通用的技术选型进行相关的说明。先上一张图： 这里提供了一个技术基础设施的模板，可以根据不同的技术方向，填入不同的技术。接着说明框架中每部分的意义。
1. 开发 # 在开发过程中，需要开发人员的开发环境。以免在开发过程中遇到一些环境不统一造成的问题。并且，还要控制运行环境，防止跨平台造成的一些隐藏问题。
开发环境基本上是为开发人员提供集成开发环境。在不同的技术栈上有不同的IDE，我们可以为开发提供比较通用，比较流行的IDE。这样可以提高开发人员融入团队过程。
运行环境中也需要定义好，运行环境中比较重要的是《接口管理》，《指标管理》，《数据库管理》，《其他软件》。主要是为了统一运行环境，在运行过程中各团队之间没有交流障碍。
接口管理现阶段业界开源技术比较流行的有：Swagger，Rap2，Kong等。指标管理有比较好的APM：Zipkin，Pinpoint，CAT等。数据库管理开源的：MyWebSQL，Pinba等。其他软件有：注册中心，配置中心，消息队列，事务控制，WEB服务器，负载均衡等等。
2. 运维 # 运维需要由专门的运维人员以及运维体系。运维中已经有很好的业务规范ITIL，为我们提供完整的运维规范。可以参照ITIL进行删减即可满足公司的要求。
3. 质量 # 质量控制也是有比较完善的规范，有专业的职位：QA，Tester，SCM。质量管理不仅管理软件的最终质量，还要管理软件的过程质量。我们可以借鉴三个职位的职责即可完成质量管理。
有时候Tester不会对测试计划进行跟踪以及复盘，我们这个时候就需要专业的Tester Leader进行控制。
4. 其他 # 除了以上的这些之外，还有涉及到公司内部沟通的基础设施，方便内部人员沟通。以及一些KPI的管理软件。为工程管理提供基础设施。
参考： # 基础设施 https://wiki.mbalib.com/wiki/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD 熵的社会学意义 http://www.ruanyifeng.com/blog/2013/04/entropy.html ITIL https://baike.baidu.com/item/ITIL/10498690?fr=aladdin</description></item><item><title>07 软件中的不疯魔不成活</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/07-%E8%BD%AF%E4%BB%B6%E4%B8%AD%E7%9A%84%E4%B8%8D%E7%96%AF%E9%AD%94%E4%B8%8D%E6%88%90%E6%B4%BB/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/07-%E8%BD%AF%E4%BB%B6%E4%B8%AD%E7%9A%84%E4%B8%8D%E7%96%AF%E9%AD%94%E4%B8%8D%E6%88%90%E6%B4%BB/</guid><description>概述 # 这里只是简单的对比一下现在软件产品服务行业中的情况。所谓的软件产品服务行业就是以软件产品为基础为客户提供各种各样的服务的产品。这个行业可以包含很多大家看到的知名软件，例如：淘宝、滴滴、快手、豆瓣、知乎、日事清、极客时间、丁香医生。
这里包含了所有软件产品的方向。之所以进行这方面的对比分析是因为现在很多人都看到了软件产品的盈利方式、盈利点等等内容，所以都想做这么一款世人皆知的产品。
现在不管是软件从业人员还是业外人事都会从事这方面的事情，但是为什么我们看到的知名产品或者真正能生存下来的产品这么少？这里就为你分析原因所在。
下面会以现在市场上产品的大概情况说明产品的存在方式：
80%的产品能用但不好用 # 80%的产品都停留在能用的阶段，具体好不好用、有没有解决用户真正的诉求都是有问题的。出现这种情况有几个原因：
大家都在对市场处于一种摸索阶段。在试验产品所解决的问题范围是否是大众或者使用这所需要的。 跨行业着对软件的理解不够深入。认为软件就是为了提高我的企业形象或者提升产品的销路。不认为这是一个立身之处。 软件行业从业者对软件产品化生命周期理解的误解。现在很多软件行业从业者认为做了几年软件，就可以出来做软件产品。不顾及软件运营，软件营销，软件使用者感受，软件运维，软件规划等等方面的问题就直接上手。 不使用专业人才做专业的事。不管是限于资金的压力、还是对人员的不信任，都会是这个问题的原因。 这里软件行业从业者的无知是最可怕的。因为这些人自以为是专家（不听别人意见），而又不知道自己不知道很多事情。所以，很多时候做出很多错误的决定，导致严重的后果。所以，绝大多数都还停留在这个阶段。
16%的产品好用但不留住用户 # 16%停留在产品真的为大众或者客户解决了问题，但是留不住客户。解决了客户的问题之后，不深度的挖掘客户的需求。客户如果发现了新的类似的软件产品，就会进行对比，如果新软件有一点点的提升就会逃离本产品。具体的问题在于：
不思进取，做出某个产品后不思考自己为什么成功的吸引到了客户，而是想怎么打败对手、怎么去抹黑对手、怎么排挤对手。 失去方向，成为某个垂直领域的佼佼者之后，失去了方向。在哪里为变现不断地做这各种尝试，但是没有一个是分析出自己为什么成功的原因。而是基于这次的成功盲目的扩张、无目的的收购、毫无准备的跨行发展等等。 只是转热钱的，软件行业永远不缺转热钱的人。例如前两年的共享经济、这两年的区块链、再过几年可能还有人工智能方向。这里有最好忽悠的客户、这里有最多金的客户，所以这里有最爱转热钱的一群人。 3.2%的产品能留住用户但不能变现 # 12.8%的产品停留在能留住客户但是变现能力很差。为什么推特这么火，而它还是赚不到钱（虽然股票跑的很好）？而Netflix为什么名声好还能转到钱？这就要看你所处的位置，你所解决的问题是不是能很好的加入你的盈利点。
在中国对于一个软件产品来说，不盈利的就是不能生存的。但是，在一些发达国家来说就看软件有没有真正的服务大众，如果是对社会有意义的、一些需要这方面支持的公司就会进行投资。而中国投资界的一个标准是我需要软件产品给我盈利，转回我投入的成本并且能得到更多。
造成上述现象的原因很复杂，说多了会被查水表。所以，不在这里太说明这些。
同处于一个行业的《新浪微博》和《Twitter》为什么一个注重盈利，另外一个到处开源？这里面有上面的原因在，也有两家公司的思维方式上的不同。因为新浪微博是有真实的生存的压力在的，所以它必须先养活自己。给微博中加入了很多最终用不不关心、不想看的内容，然后盈利。而Twitter的生存压力算是比较小的，有投资有股票。所以，在迟迟的推出了付费用户服务。
0.64%的产品能变现但口碑不好 # 现在国内绝大多数知名软件产品所在的位置。什么病毒式营销、推卸在软件使用中的问题、说话出尔反尔都是在这里出现的。
而且这些国内公司的习惯会非常好的传播给国外公司的中国分公司。简单来说就是《中国市场就是一个劣币驱逐良币的市场》。一个公司为社会责任付出了更多，中国人就会认为这个公司好傻。我们中国人就要去骗它，最简单的例子：安利进入中国时排队退货的事情。
这里还有很多大公司窃取小公司劳动成功的事情。大公司以各种各样的方式抄袭推广、恶意收购等等事情比比皆是。所以，很多小公司走到这一步不是容易的一件事。
0.16%的产品口碑好 # 这里就要提的是企业的社会责任。有一家公司有一个宣言《Do not be evil》但是这家公司后来也退出中国市场了。这两年这家公司也把这个口号给撤了。
所以，说全球的商业环境都在恶化。不要说经济危机是水面下暗藏的漩涡，但是经济危机是可见的、人们明显知道的。商业环境里那些逼你作恶的环境才是世界的隐患，而且还很难以发现与表现。
总结 # 总体来说：软件产品为什么做不好的原因在于不为软件产品做真正的付出，不反思成功而反思失败，迫于变现的压力，整体的商业环境这几个因素。所以，请认真的应对每一件值得改善产品的事，并珍惜现在还可以坚守的立场。</description></item><item><title>09 如何构建中台？</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/09-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%B8%AD%E5%8F%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/09-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%B8%AD%E5%8F%B0/</guid><description>背景 # 软件本身就是一个精密而复杂的工程，并且是伴随着高技术含量的。在现在“互联网+”潮流的驱动下，就会有很多传统行业的人涌入到互联网行业。随着资金的带动，带来了鱼龙混杂的人员为了能够高薪而涌入互联网行业。举一个简单的例子：一个之前在淘宝买点卡的人都干吹自己是做互联网出身的。
随着人员能力，认知水平被大幅拉低。导致软件的复杂性，精密性，高技术含量被大幅的忽略与降低。比较久之前软件架构是从建筑架构而来的，后来我又以城市规划设计的概念进行架构设计的类比。软件架构设计与实现是最起码与这两项工作复杂度，精密程度相对等的工作。不过这两项工作是不可以重建的，关乎生活，关乎人民生命财产安全的。所以，人们才比较重视。
中台建设 # 在软件业界有流行靠PMP的，对于PMP来说软件只不过是一个项目而已。而且也不是什么复杂项目，复杂项目可以是造航天飞机并让他上线，也可以是组织一场奥运会。而对比航天飞机的建造与飞天返回的过程来说，任何的公司的中台建设都显得非常小。不管是耗费的资金，还是投入的人员，还是复杂程度都非常小。但对于一个公司来说建造一个中台关系着公司的生死，关系着公司的发展。所以对于公司来说建设一套中台体系是需要想美国重视NASA的程度一样进行重视的。
对于NASA来说，他呈现给我们的就是一套完整的，可用的系统。关于怎样构建一套这样的系统，这套系统构建过程背后所包含的意义是什么是不会告诉我们的。也就是除了形式，我们不能学到更多他们为什么是这样的知识。往往这些知识才是这套系统能完整的运行起来的意义。
就像学习敏捷一样，国内国外都在学敏捷，都在实践敏捷。而且失败的经验比成功的经验多的多。为什么还有人在说敏捷呢？在国内我看到的是很多管理层为了满足自己的或者自己团队的利益而推动的敏捷，这类不以根本原则作为指导的推动只能是失败的。
只有公司重视自己的发展，重视公司的未来才能真正成功的建设一套中台。重视中台是成功的必要条件，但中台建设还有一些其他的条件。例如：有比较全面的业务分析、又对企业架构的理解、选择适合公司的建设过程、有适合的实施方法、有对服务治理的理解、有对康威定律的理解。
规划 # 规划是对巨大的目标怎样实现，实现过程中遇到的问题应该怎样解决。正如下图中所说到的： 对于企业架构设计以及企业能力模型来说需要的能力包括：
业务架构（BA：政策和业务体系） 政策和业务相关战略，及其所必要的业务流程和信息流的整体结构。
数据架构（DA：数据体系） 执行政策和业务时所必要的信息处理数据的整体结构。
应用架构（AA：应用处理体系） 业务系统（应用系统）的整体结构
技术架构（TA：技术体系） 以硬件和网络为代表的IT基础设施的整体结构。
过程 # 对于规划完成后需要进行落地实施的方法。有多重方法可以进行有自上而下的将企业架构设计推广带下层并进行实施，自下而上的过程的将各个系统构建好后进行融合，还有中间插入业务流程进行相关的设计与适配的过程。
对于选择那种方式是根据公司的具体情况进行选择的。例如：阿里的大中台战略其实是自上而下的进行，通过上层对多种业务的聚合，形成最后的中台概念。从无到有的方式也是使用这种方式进行构建的。
对于自底向上的方式是对于现有的业务进行业务与实体的抽象，并补充业务链中欠缺的一环形成一套业务实体后根据实体进行业务的管理与治理工作形成的服务群。
中间插入适配的过程，在不变更前端业务与后台业务的情况下在中间插入适配使数据，业务，流程可以穿透在前后端之间的方式形成的技术解决方案的形式。
方法 # 在选择完成实施过程之后，具体应该怎样进行更小可实施单元的划分，可以使用的实施方法：MVP，纵向，横向。
将MVP的方式认为以新的业务为突破，形成新的业务，技术，数据方式进行构建。ToGaf类似的内容是使用纵向划分并进行构建的过程。横向是构建一个业务层。
总结 # 总结的内容只有中台其实是一个企业架构的实践，它的构建过程是需要符合企业架构的实施过程的。
参考 # 设计已死？ 企业架构（EA）在现代企业中的作用 为什么企业架构如此重要？ 到底什么才是业务架构？ 开发企业架构的实用指南 《CIO工作指南》阅读笔记&amp;ndash;IT架构标准</description></item><item><title>10 中台</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/10-%E4%B8%AD%E5%8F%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/10-%E4%B8%AD%E5%8F%B0/</guid><description># 参考 # 关于中台，你可能不知道的那些事 阿里带火的中台到底是什么？白话中台战略 ThoughtWorks规模化创新赋能，为企业“数字化”转型破题</description></item><item><title>11 一云多端三中台</title><link>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/11-%E4%B8%80%E4%BA%91%E5%A4%9A%E7%AB%AF%E4%B8%89%E4%B8%AD%E5%8F%B0/</link><pubDate>Sat, 22 Apr 2023 12:52:56 +0800</pubDate><guid>https://guowei1651.github.io/process_management/01.%E8%A7%84%E5%88%92/11-%E4%B8%80%E4%BA%91%E5%A4%9A%E7%AB%AF%E4%B8%89%E4%B8%AD%E5%8F%B0/</guid><description/></item></channel></rss>